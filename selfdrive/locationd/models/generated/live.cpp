#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1975042085507842433) {
   out_1975042085507842433[0] = 0;
   out_1975042085507842433[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1975042085507842433[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1975042085507842433[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1975042085507842433[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1975042085507842433[5] = -sin(in_vec[1]);
   out_1975042085507842433[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1975042085507842433[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1975042085507842433[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1975042085507842433[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1975042085507842433[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1975042085507842433[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1975042085507842433[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1975042085507842433[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1975042085507842433[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1975042085507842433[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1975042085507842433[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1975042085507842433[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6316537518300744749) {
   out_6316537518300744749[0] = delta_x[0] + nom_x[0];
   out_6316537518300744749[1] = delta_x[1] + nom_x[1];
   out_6316537518300744749[2] = delta_x[2] + nom_x[2];
   out_6316537518300744749[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6316537518300744749[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6316537518300744749[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6316537518300744749[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6316537518300744749[7] = delta_x[6] + nom_x[7];
   out_6316537518300744749[8] = delta_x[7] + nom_x[8];
   out_6316537518300744749[9] = delta_x[8] + nom_x[9];
   out_6316537518300744749[10] = delta_x[9] + nom_x[10];
   out_6316537518300744749[11] = delta_x[10] + nom_x[11];
   out_6316537518300744749[12] = delta_x[11] + nom_x[12];
   out_6316537518300744749[13] = delta_x[12] + nom_x[13];
   out_6316537518300744749[14] = delta_x[13] + nom_x[14];
   out_6316537518300744749[15] = delta_x[14] + nom_x[15];
   out_6316537518300744749[16] = delta_x[15] + nom_x[16];
   out_6316537518300744749[17] = delta_x[16] + nom_x[17];
   out_6316537518300744749[18] = delta_x[17] + nom_x[18];
   out_6316537518300744749[19] = delta_x[18] + nom_x[19];
   out_6316537518300744749[20] = delta_x[19] + nom_x[20];
   out_6316537518300744749[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5437110354054996620) {
   out_5437110354054996620[0] = -nom_x[0] + true_x[0];
   out_5437110354054996620[1] = -nom_x[1] + true_x[1];
   out_5437110354054996620[2] = -nom_x[2] + true_x[2];
   out_5437110354054996620[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5437110354054996620[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5437110354054996620[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5437110354054996620[6] = -nom_x[7] + true_x[7];
   out_5437110354054996620[7] = -nom_x[8] + true_x[8];
   out_5437110354054996620[8] = -nom_x[9] + true_x[9];
   out_5437110354054996620[9] = -nom_x[10] + true_x[10];
   out_5437110354054996620[10] = -nom_x[11] + true_x[11];
   out_5437110354054996620[11] = -nom_x[12] + true_x[12];
   out_5437110354054996620[12] = -nom_x[13] + true_x[13];
   out_5437110354054996620[13] = -nom_x[14] + true_x[14];
   out_5437110354054996620[14] = -nom_x[15] + true_x[15];
   out_5437110354054996620[15] = -nom_x[16] + true_x[16];
   out_5437110354054996620[16] = -nom_x[17] + true_x[17];
   out_5437110354054996620[17] = -nom_x[18] + true_x[18];
   out_5437110354054996620[18] = -nom_x[19] + true_x[19];
   out_5437110354054996620[19] = -nom_x[20] + true_x[20];
   out_5437110354054996620[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6104230166974042109) {
   out_6104230166974042109[0] = 1.0;
   out_6104230166974042109[1] = 0;
   out_6104230166974042109[2] = 0;
   out_6104230166974042109[3] = 0;
   out_6104230166974042109[4] = 0;
   out_6104230166974042109[5] = 0;
   out_6104230166974042109[6] = 0;
   out_6104230166974042109[7] = 0;
   out_6104230166974042109[8] = 0;
   out_6104230166974042109[9] = 0;
   out_6104230166974042109[10] = 0;
   out_6104230166974042109[11] = 0;
   out_6104230166974042109[12] = 0;
   out_6104230166974042109[13] = 0;
   out_6104230166974042109[14] = 0;
   out_6104230166974042109[15] = 0;
   out_6104230166974042109[16] = 0;
   out_6104230166974042109[17] = 0;
   out_6104230166974042109[18] = 0;
   out_6104230166974042109[19] = 0;
   out_6104230166974042109[20] = 0;
   out_6104230166974042109[21] = 0;
   out_6104230166974042109[22] = 1.0;
   out_6104230166974042109[23] = 0;
   out_6104230166974042109[24] = 0;
   out_6104230166974042109[25] = 0;
   out_6104230166974042109[26] = 0;
   out_6104230166974042109[27] = 0;
   out_6104230166974042109[28] = 0;
   out_6104230166974042109[29] = 0;
   out_6104230166974042109[30] = 0;
   out_6104230166974042109[31] = 0;
   out_6104230166974042109[32] = 0;
   out_6104230166974042109[33] = 0;
   out_6104230166974042109[34] = 0;
   out_6104230166974042109[35] = 0;
   out_6104230166974042109[36] = 0;
   out_6104230166974042109[37] = 0;
   out_6104230166974042109[38] = 0;
   out_6104230166974042109[39] = 0;
   out_6104230166974042109[40] = 0;
   out_6104230166974042109[41] = 0;
   out_6104230166974042109[42] = 0;
   out_6104230166974042109[43] = 0;
   out_6104230166974042109[44] = 1.0;
   out_6104230166974042109[45] = 0;
   out_6104230166974042109[46] = 0;
   out_6104230166974042109[47] = 0;
   out_6104230166974042109[48] = 0;
   out_6104230166974042109[49] = 0;
   out_6104230166974042109[50] = 0;
   out_6104230166974042109[51] = 0;
   out_6104230166974042109[52] = 0;
   out_6104230166974042109[53] = 0;
   out_6104230166974042109[54] = 0;
   out_6104230166974042109[55] = 0;
   out_6104230166974042109[56] = 0;
   out_6104230166974042109[57] = 0;
   out_6104230166974042109[58] = 0;
   out_6104230166974042109[59] = 0;
   out_6104230166974042109[60] = 0;
   out_6104230166974042109[61] = 0;
   out_6104230166974042109[62] = 0;
   out_6104230166974042109[63] = 0;
   out_6104230166974042109[64] = 0;
   out_6104230166974042109[65] = 0;
   out_6104230166974042109[66] = -0.5*state[4];
   out_6104230166974042109[67] = -0.5*state[5];
   out_6104230166974042109[68] = -0.5*state[6];
   out_6104230166974042109[69] = 0;
   out_6104230166974042109[70] = 0;
   out_6104230166974042109[71] = 0;
   out_6104230166974042109[72] = 0;
   out_6104230166974042109[73] = 0;
   out_6104230166974042109[74] = 0;
   out_6104230166974042109[75] = 0;
   out_6104230166974042109[76] = 0;
   out_6104230166974042109[77] = 0;
   out_6104230166974042109[78] = 0;
   out_6104230166974042109[79] = 0;
   out_6104230166974042109[80] = 0;
   out_6104230166974042109[81] = 0;
   out_6104230166974042109[82] = 0;
   out_6104230166974042109[83] = 0;
   out_6104230166974042109[84] = 0;
   out_6104230166974042109[85] = 0;
   out_6104230166974042109[86] = 0;
   out_6104230166974042109[87] = 0.5*state[3];
   out_6104230166974042109[88] = 0.5*state[6];
   out_6104230166974042109[89] = -0.5*state[5];
   out_6104230166974042109[90] = 0;
   out_6104230166974042109[91] = 0;
   out_6104230166974042109[92] = 0;
   out_6104230166974042109[93] = 0;
   out_6104230166974042109[94] = 0;
   out_6104230166974042109[95] = 0;
   out_6104230166974042109[96] = 0;
   out_6104230166974042109[97] = 0;
   out_6104230166974042109[98] = 0;
   out_6104230166974042109[99] = 0;
   out_6104230166974042109[100] = 0;
   out_6104230166974042109[101] = 0;
   out_6104230166974042109[102] = 0;
   out_6104230166974042109[103] = 0;
   out_6104230166974042109[104] = 0;
   out_6104230166974042109[105] = 0;
   out_6104230166974042109[106] = 0;
   out_6104230166974042109[107] = 0;
   out_6104230166974042109[108] = -0.5*state[6];
   out_6104230166974042109[109] = 0.5*state[3];
   out_6104230166974042109[110] = 0.5*state[4];
   out_6104230166974042109[111] = 0;
   out_6104230166974042109[112] = 0;
   out_6104230166974042109[113] = 0;
   out_6104230166974042109[114] = 0;
   out_6104230166974042109[115] = 0;
   out_6104230166974042109[116] = 0;
   out_6104230166974042109[117] = 0;
   out_6104230166974042109[118] = 0;
   out_6104230166974042109[119] = 0;
   out_6104230166974042109[120] = 0;
   out_6104230166974042109[121] = 0;
   out_6104230166974042109[122] = 0;
   out_6104230166974042109[123] = 0;
   out_6104230166974042109[124] = 0;
   out_6104230166974042109[125] = 0;
   out_6104230166974042109[126] = 0;
   out_6104230166974042109[127] = 0;
   out_6104230166974042109[128] = 0;
   out_6104230166974042109[129] = 0.5*state[5];
   out_6104230166974042109[130] = -0.5*state[4];
   out_6104230166974042109[131] = 0.5*state[3];
   out_6104230166974042109[132] = 0;
   out_6104230166974042109[133] = 0;
   out_6104230166974042109[134] = 0;
   out_6104230166974042109[135] = 0;
   out_6104230166974042109[136] = 0;
   out_6104230166974042109[137] = 0;
   out_6104230166974042109[138] = 0;
   out_6104230166974042109[139] = 0;
   out_6104230166974042109[140] = 0;
   out_6104230166974042109[141] = 0;
   out_6104230166974042109[142] = 0;
   out_6104230166974042109[143] = 0;
   out_6104230166974042109[144] = 0;
   out_6104230166974042109[145] = 0;
   out_6104230166974042109[146] = 0;
   out_6104230166974042109[147] = 0;
   out_6104230166974042109[148] = 0;
   out_6104230166974042109[149] = 0;
   out_6104230166974042109[150] = 0;
   out_6104230166974042109[151] = 0;
   out_6104230166974042109[152] = 0;
   out_6104230166974042109[153] = 1.0;
   out_6104230166974042109[154] = 0;
   out_6104230166974042109[155] = 0;
   out_6104230166974042109[156] = 0;
   out_6104230166974042109[157] = 0;
   out_6104230166974042109[158] = 0;
   out_6104230166974042109[159] = 0;
   out_6104230166974042109[160] = 0;
   out_6104230166974042109[161] = 0;
   out_6104230166974042109[162] = 0;
   out_6104230166974042109[163] = 0;
   out_6104230166974042109[164] = 0;
   out_6104230166974042109[165] = 0;
   out_6104230166974042109[166] = 0;
   out_6104230166974042109[167] = 0;
   out_6104230166974042109[168] = 0;
   out_6104230166974042109[169] = 0;
   out_6104230166974042109[170] = 0;
   out_6104230166974042109[171] = 0;
   out_6104230166974042109[172] = 0;
   out_6104230166974042109[173] = 0;
   out_6104230166974042109[174] = 0;
   out_6104230166974042109[175] = 1.0;
   out_6104230166974042109[176] = 0;
   out_6104230166974042109[177] = 0;
   out_6104230166974042109[178] = 0;
   out_6104230166974042109[179] = 0;
   out_6104230166974042109[180] = 0;
   out_6104230166974042109[181] = 0;
   out_6104230166974042109[182] = 0;
   out_6104230166974042109[183] = 0;
   out_6104230166974042109[184] = 0;
   out_6104230166974042109[185] = 0;
   out_6104230166974042109[186] = 0;
   out_6104230166974042109[187] = 0;
   out_6104230166974042109[188] = 0;
   out_6104230166974042109[189] = 0;
   out_6104230166974042109[190] = 0;
   out_6104230166974042109[191] = 0;
   out_6104230166974042109[192] = 0;
   out_6104230166974042109[193] = 0;
   out_6104230166974042109[194] = 0;
   out_6104230166974042109[195] = 0;
   out_6104230166974042109[196] = 0;
   out_6104230166974042109[197] = 1.0;
   out_6104230166974042109[198] = 0;
   out_6104230166974042109[199] = 0;
   out_6104230166974042109[200] = 0;
   out_6104230166974042109[201] = 0;
   out_6104230166974042109[202] = 0;
   out_6104230166974042109[203] = 0;
   out_6104230166974042109[204] = 0;
   out_6104230166974042109[205] = 0;
   out_6104230166974042109[206] = 0;
   out_6104230166974042109[207] = 0;
   out_6104230166974042109[208] = 0;
   out_6104230166974042109[209] = 0;
   out_6104230166974042109[210] = 0;
   out_6104230166974042109[211] = 0;
   out_6104230166974042109[212] = 0;
   out_6104230166974042109[213] = 0;
   out_6104230166974042109[214] = 0;
   out_6104230166974042109[215] = 0;
   out_6104230166974042109[216] = 0;
   out_6104230166974042109[217] = 0;
   out_6104230166974042109[218] = 0;
   out_6104230166974042109[219] = 1.0;
   out_6104230166974042109[220] = 0;
   out_6104230166974042109[221] = 0;
   out_6104230166974042109[222] = 0;
   out_6104230166974042109[223] = 0;
   out_6104230166974042109[224] = 0;
   out_6104230166974042109[225] = 0;
   out_6104230166974042109[226] = 0;
   out_6104230166974042109[227] = 0;
   out_6104230166974042109[228] = 0;
   out_6104230166974042109[229] = 0;
   out_6104230166974042109[230] = 0;
   out_6104230166974042109[231] = 0;
   out_6104230166974042109[232] = 0;
   out_6104230166974042109[233] = 0;
   out_6104230166974042109[234] = 0;
   out_6104230166974042109[235] = 0;
   out_6104230166974042109[236] = 0;
   out_6104230166974042109[237] = 0;
   out_6104230166974042109[238] = 0;
   out_6104230166974042109[239] = 0;
   out_6104230166974042109[240] = 0;
   out_6104230166974042109[241] = 1.0;
   out_6104230166974042109[242] = 0;
   out_6104230166974042109[243] = 0;
   out_6104230166974042109[244] = 0;
   out_6104230166974042109[245] = 0;
   out_6104230166974042109[246] = 0;
   out_6104230166974042109[247] = 0;
   out_6104230166974042109[248] = 0;
   out_6104230166974042109[249] = 0;
   out_6104230166974042109[250] = 0;
   out_6104230166974042109[251] = 0;
   out_6104230166974042109[252] = 0;
   out_6104230166974042109[253] = 0;
   out_6104230166974042109[254] = 0;
   out_6104230166974042109[255] = 0;
   out_6104230166974042109[256] = 0;
   out_6104230166974042109[257] = 0;
   out_6104230166974042109[258] = 0;
   out_6104230166974042109[259] = 0;
   out_6104230166974042109[260] = 0;
   out_6104230166974042109[261] = 0;
   out_6104230166974042109[262] = 0;
   out_6104230166974042109[263] = 1.0;
   out_6104230166974042109[264] = 0;
   out_6104230166974042109[265] = 0;
   out_6104230166974042109[266] = 0;
   out_6104230166974042109[267] = 0;
   out_6104230166974042109[268] = 0;
   out_6104230166974042109[269] = 0;
   out_6104230166974042109[270] = 0;
   out_6104230166974042109[271] = 0;
   out_6104230166974042109[272] = 0;
   out_6104230166974042109[273] = 0;
   out_6104230166974042109[274] = 0;
   out_6104230166974042109[275] = 0;
   out_6104230166974042109[276] = 0;
   out_6104230166974042109[277] = 0;
   out_6104230166974042109[278] = 0;
   out_6104230166974042109[279] = 0;
   out_6104230166974042109[280] = 0;
   out_6104230166974042109[281] = 0;
   out_6104230166974042109[282] = 0;
   out_6104230166974042109[283] = 0;
   out_6104230166974042109[284] = 0;
   out_6104230166974042109[285] = 1.0;
   out_6104230166974042109[286] = 0;
   out_6104230166974042109[287] = 0;
   out_6104230166974042109[288] = 0;
   out_6104230166974042109[289] = 0;
   out_6104230166974042109[290] = 0;
   out_6104230166974042109[291] = 0;
   out_6104230166974042109[292] = 0;
   out_6104230166974042109[293] = 0;
   out_6104230166974042109[294] = 0;
   out_6104230166974042109[295] = 0;
   out_6104230166974042109[296] = 0;
   out_6104230166974042109[297] = 0;
   out_6104230166974042109[298] = 0;
   out_6104230166974042109[299] = 0;
   out_6104230166974042109[300] = 0;
   out_6104230166974042109[301] = 0;
   out_6104230166974042109[302] = 0;
   out_6104230166974042109[303] = 0;
   out_6104230166974042109[304] = 0;
   out_6104230166974042109[305] = 0;
   out_6104230166974042109[306] = 0;
   out_6104230166974042109[307] = 1.0;
   out_6104230166974042109[308] = 0;
   out_6104230166974042109[309] = 0;
   out_6104230166974042109[310] = 0;
   out_6104230166974042109[311] = 0;
   out_6104230166974042109[312] = 0;
   out_6104230166974042109[313] = 0;
   out_6104230166974042109[314] = 0;
   out_6104230166974042109[315] = 0;
   out_6104230166974042109[316] = 0;
   out_6104230166974042109[317] = 0;
   out_6104230166974042109[318] = 0;
   out_6104230166974042109[319] = 0;
   out_6104230166974042109[320] = 0;
   out_6104230166974042109[321] = 0;
   out_6104230166974042109[322] = 0;
   out_6104230166974042109[323] = 0;
   out_6104230166974042109[324] = 0;
   out_6104230166974042109[325] = 0;
   out_6104230166974042109[326] = 0;
   out_6104230166974042109[327] = 0;
   out_6104230166974042109[328] = 0;
   out_6104230166974042109[329] = 1.0;
   out_6104230166974042109[330] = 0;
   out_6104230166974042109[331] = 0;
   out_6104230166974042109[332] = 0;
   out_6104230166974042109[333] = 0;
   out_6104230166974042109[334] = 0;
   out_6104230166974042109[335] = 0;
   out_6104230166974042109[336] = 0;
   out_6104230166974042109[337] = 0;
   out_6104230166974042109[338] = 0;
   out_6104230166974042109[339] = 0;
   out_6104230166974042109[340] = 0;
   out_6104230166974042109[341] = 0;
   out_6104230166974042109[342] = 0;
   out_6104230166974042109[343] = 0;
   out_6104230166974042109[344] = 0;
   out_6104230166974042109[345] = 0;
   out_6104230166974042109[346] = 0;
   out_6104230166974042109[347] = 0;
   out_6104230166974042109[348] = 0;
   out_6104230166974042109[349] = 0;
   out_6104230166974042109[350] = 0;
   out_6104230166974042109[351] = 1.0;
   out_6104230166974042109[352] = 0;
   out_6104230166974042109[353] = 0;
   out_6104230166974042109[354] = 0;
   out_6104230166974042109[355] = 0;
   out_6104230166974042109[356] = 0;
   out_6104230166974042109[357] = 0;
   out_6104230166974042109[358] = 0;
   out_6104230166974042109[359] = 0;
   out_6104230166974042109[360] = 0;
   out_6104230166974042109[361] = 0;
   out_6104230166974042109[362] = 0;
   out_6104230166974042109[363] = 0;
   out_6104230166974042109[364] = 0;
   out_6104230166974042109[365] = 0;
   out_6104230166974042109[366] = 0;
   out_6104230166974042109[367] = 0;
   out_6104230166974042109[368] = 0;
   out_6104230166974042109[369] = 0;
   out_6104230166974042109[370] = 0;
   out_6104230166974042109[371] = 0;
   out_6104230166974042109[372] = 0;
   out_6104230166974042109[373] = 1.0;
   out_6104230166974042109[374] = 0;
   out_6104230166974042109[375] = 0;
   out_6104230166974042109[376] = 0;
   out_6104230166974042109[377] = 0;
   out_6104230166974042109[378] = 0;
   out_6104230166974042109[379] = 0;
   out_6104230166974042109[380] = 0;
   out_6104230166974042109[381] = 0;
   out_6104230166974042109[382] = 0;
   out_6104230166974042109[383] = 0;
   out_6104230166974042109[384] = 0;
   out_6104230166974042109[385] = 0;
   out_6104230166974042109[386] = 0;
   out_6104230166974042109[387] = 0;
   out_6104230166974042109[388] = 0;
   out_6104230166974042109[389] = 0;
   out_6104230166974042109[390] = 0;
   out_6104230166974042109[391] = 0;
   out_6104230166974042109[392] = 0;
   out_6104230166974042109[393] = 0;
   out_6104230166974042109[394] = 0;
   out_6104230166974042109[395] = 1.0;
   out_6104230166974042109[396] = 0;
   out_6104230166974042109[397] = 0;
   out_6104230166974042109[398] = 0;
   out_6104230166974042109[399] = 0;
   out_6104230166974042109[400] = 0;
   out_6104230166974042109[401] = 0;
   out_6104230166974042109[402] = 0;
   out_6104230166974042109[403] = 0;
   out_6104230166974042109[404] = 0;
   out_6104230166974042109[405] = 0;
   out_6104230166974042109[406] = 0;
   out_6104230166974042109[407] = 0;
   out_6104230166974042109[408] = 0;
   out_6104230166974042109[409] = 0;
   out_6104230166974042109[410] = 0;
   out_6104230166974042109[411] = 0;
   out_6104230166974042109[412] = 0;
   out_6104230166974042109[413] = 0;
   out_6104230166974042109[414] = 0;
   out_6104230166974042109[415] = 0;
   out_6104230166974042109[416] = 0;
   out_6104230166974042109[417] = 1.0;
   out_6104230166974042109[418] = 0;
   out_6104230166974042109[419] = 0;
   out_6104230166974042109[420] = 0;
   out_6104230166974042109[421] = 0;
   out_6104230166974042109[422] = 0;
   out_6104230166974042109[423] = 0;
   out_6104230166974042109[424] = 0;
   out_6104230166974042109[425] = 0;
   out_6104230166974042109[426] = 0;
   out_6104230166974042109[427] = 0;
   out_6104230166974042109[428] = 0;
   out_6104230166974042109[429] = 0;
   out_6104230166974042109[430] = 0;
   out_6104230166974042109[431] = 0;
   out_6104230166974042109[432] = 0;
   out_6104230166974042109[433] = 0;
   out_6104230166974042109[434] = 0;
   out_6104230166974042109[435] = 0;
   out_6104230166974042109[436] = 0;
   out_6104230166974042109[437] = 0;
   out_6104230166974042109[438] = 0;
   out_6104230166974042109[439] = 1.0;
   out_6104230166974042109[440] = 0;
   out_6104230166974042109[441] = 0;
   out_6104230166974042109[442] = 0;
   out_6104230166974042109[443] = 0;
   out_6104230166974042109[444] = 0;
   out_6104230166974042109[445] = 0;
   out_6104230166974042109[446] = 0;
   out_6104230166974042109[447] = 0;
   out_6104230166974042109[448] = 0;
   out_6104230166974042109[449] = 0;
   out_6104230166974042109[450] = 0;
   out_6104230166974042109[451] = 0;
   out_6104230166974042109[452] = 0;
   out_6104230166974042109[453] = 0;
   out_6104230166974042109[454] = 0;
   out_6104230166974042109[455] = 0;
   out_6104230166974042109[456] = 0;
   out_6104230166974042109[457] = 0;
   out_6104230166974042109[458] = 0;
   out_6104230166974042109[459] = 0;
   out_6104230166974042109[460] = 0;
   out_6104230166974042109[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6857365862403648822) {
   out_6857365862403648822[0] = dt*state[7] + state[0];
   out_6857365862403648822[1] = dt*state[8] + state[1];
   out_6857365862403648822[2] = dt*state[9] + state[2];
   out_6857365862403648822[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6857365862403648822[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6857365862403648822[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6857365862403648822[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6857365862403648822[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6857365862403648822[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6857365862403648822[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6857365862403648822[10] = state[10];
   out_6857365862403648822[11] = state[11];
   out_6857365862403648822[12] = state[12];
   out_6857365862403648822[13] = state[13];
   out_6857365862403648822[14] = state[14];
   out_6857365862403648822[15] = state[15];
   out_6857365862403648822[16] = state[16];
   out_6857365862403648822[17] = state[17];
   out_6857365862403648822[18] = state[18];
   out_6857365862403648822[19] = state[19];
   out_6857365862403648822[20] = state[20];
   out_6857365862403648822[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5197654036786227137) {
   out_5197654036786227137[0] = 1;
   out_5197654036786227137[1] = 0;
   out_5197654036786227137[2] = 0;
   out_5197654036786227137[3] = 0;
   out_5197654036786227137[4] = 0;
   out_5197654036786227137[5] = 0;
   out_5197654036786227137[6] = dt;
   out_5197654036786227137[7] = 0;
   out_5197654036786227137[8] = 0;
   out_5197654036786227137[9] = 0;
   out_5197654036786227137[10] = 0;
   out_5197654036786227137[11] = 0;
   out_5197654036786227137[12] = 0;
   out_5197654036786227137[13] = 0;
   out_5197654036786227137[14] = 0;
   out_5197654036786227137[15] = 0;
   out_5197654036786227137[16] = 0;
   out_5197654036786227137[17] = 0;
   out_5197654036786227137[18] = 0;
   out_5197654036786227137[19] = 0;
   out_5197654036786227137[20] = 0;
   out_5197654036786227137[21] = 0;
   out_5197654036786227137[22] = 1;
   out_5197654036786227137[23] = 0;
   out_5197654036786227137[24] = 0;
   out_5197654036786227137[25] = 0;
   out_5197654036786227137[26] = 0;
   out_5197654036786227137[27] = 0;
   out_5197654036786227137[28] = dt;
   out_5197654036786227137[29] = 0;
   out_5197654036786227137[30] = 0;
   out_5197654036786227137[31] = 0;
   out_5197654036786227137[32] = 0;
   out_5197654036786227137[33] = 0;
   out_5197654036786227137[34] = 0;
   out_5197654036786227137[35] = 0;
   out_5197654036786227137[36] = 0;
   out_5197654036786227137[37] = 0;
   out_5197654036786227137[38] = 0;
   out_5197654036786227137[39] = 0;
   out_5197654036786227137[40] = 0;
   out_5197654036786227137[41] = 0;
   out_5197654036786227137[42] = 0;
   out_5197654036786227137[43] = 0;
   out_5197654036786227137[44] = 1;
   out_5197654036786227137[45] = 0;
   out_5197654036786227137[46] = 0;
   out_5197654036786227137[47] = 0;
   out_5197654036786227137[48] = 0;
   out_5197654036786227137[49] = 0;
   out_5197654036786227137[50] = dt;
   out_5197654036786227137[51] = 0;
   out_5197654036786227137[52] = 0;
   out_5197654036786227137[53] = 0;
   out_5197654036786227137[54] = 0;
   out_5197654036786227137[55] = 0;
   out_5197654036786227137[56] = 0;
   out_5197654036786227137[57] = 0;
   out_5197654036786227137[58] = 0;
   out_5197654036786227137[59] = 0;
   out_5197654036786227137[60] = 0;
   out_5197654036786227137[61] = 0;
   out_5197654036786227137[62] = 0;
   out_5197654036786227137[63] = 0;
   out_5197654036786227137[64] = 0;
   out_5197654036786227137[65] = 0;
   out_5197654036786227137[66] = 1;
   out_5197654036786227137[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5197654036786227137[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5197654036786227137[69] = 0;
   out_5197654036786227137[70] = 0;
   out_5197654036786227137[71] = 0;
   out_5197654036786227137[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5197654036786227137[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5197654036786227137[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5197654036786227137[75] = 0;
   out_5197654036786227137[76] = 0;
   out_5197654036786227137[77] = 0;
   out_5197654036786227137[78] = 0;
   out_5197654036786227137[79] = 0;
   out_5197654036786227137[80] = 0;
   out_5197654036786227137[81] = 0;
   out_5197654036786227137[82] = 0;
   out_5197654036786227137[83] = 0;
   out_5197654036786227137[84] = 0;
   out_5197654036786227137[85] = 0;
   out_5197654036786227137[86] = 0;
   out_5197654036786227137[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5197654036786227137[88] = 1;
   out_5197654036786227137[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5197654036786227137[90] = 0;
   out_5197654036786227137[91] = 0;
   out_5197654036786227137[92] = 0;
   out_5197654036786227137[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5197654036786227137[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5197654036786227137[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5197654036786227137[96] = 0;
   out_5197654036786227137[97] = 0;
   out_5197654036786227137[98] = 0;
   out_5197654036786227137[99] = 0;
   out_5197654036786227137[100] = 0;
   out_5197654036786227137[101] = 0;
   out_5197654036786227137[102] = 0;
   out_5197654036786227137[103] = 0;
   out_5197654036786227137[104] = 0;
   out_5197654036786227137[105] = 0;
   out_5197654036786227137[106] = 0;
   out_5197654036786227137[107] = 0;
   out_5197654036786227137[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5197654036786227137[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5197654036786227137[110] = 1;
   out_5197654036786227137[111] = 0;
   out_5197654036786227137[112] = 0;
   out_5197654036786227137[113] = 0;
   out_5197654036786227137[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5197654036786227137[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5197654036786227137[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5197654036786227137[117] = 0;
   out_5197654036786227137[118] = 0;
   out_5197654036786227137[119] = 0;
   out_5197654036786227137[120] = 0;
   out_5197654036786227137[121] = 0;
   out_5197654036786227137[122] = 0;
   out_5197654036786227137[123] = 0;
   out_5197654036786227137[124] = 0;
   out_5197654036786227137[125] = 0;
   out_5197654036786227137[126] = 0;
   out_5197654036786227137[127] = 0;
   out_5197654036786227137[128] = 0;
   out_5197654036786227137[129] = 0;
   out_5197654036786227137[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5197654036786227137[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5197654036786227137[132] = 1;
   out_5197654036786227137[133] = 0;
   out_5197654036786227137[134] = 0;
   out_5197654036786227137[135] = 0;
   out_5197654036786227137[136] = 0;
   out_5197654036786227137[137] = 0;
   out_5197654036786227137[138] = 0;
   out_5197654036786227137[139] = 0;
   out_5197654036786227137[140] = 0;
   out_5197654036786227137[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5197654036786227137[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5197654036786227137[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5197654036786227137[144] = 0;
   out_5197654036786227137[145] = 0;
   out_5197654036786227137[146] = 0;
   out_5197654036786227137[147] = 0;
   out_5197654036786227137[148] = 0;
   out_5197654036786227137[149] = 0;
   out_5197654036786227137[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5197654036786227137[151] = 0;
   out_5197654036786227137[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5197654036786227137[153] = 0;
   out_5197654036786227137[154] = 1;
   out_5197654036786227137[155] = 0;
   out_5197654036786227137[156] = 0;
   out_5197654036786227137[157] = 0;
   out_5197654036786227137[158] = 0;
   out_5197654036786227137[159] = 0;
   out_5197654036786227137[160] = 0;
   out_5197654036786227137[161] = 0;
   out_5197654036786227137[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5197654036786227137[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5197654036786227137[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5197654036786227137[165] = 0;
   out_5197654036786227137[166] = 0;
   out_5197654036786227137[167] = 0;
   out_5197654036786227137[168] = 0;
   out_5197654036786227137[169] = 0;
   out_5197654036786227137[170] = 0;
   out_5197654036786227137[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5197654036786227137[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5197654036786227137[173] = 0;
   out_5197654036786227137[174] = 0;
   out_5197654036786227137[175] = 0;
   out_5197654036786227137[176] = 1;
   out_5197654036786227137[177] = 0;
   out_5197654036786227137[178] = 0;
   out_5197654036786227137[179] = 0;
   out_5197654036786227137[180] = 0;
   out_5197654036786227137[181] = 0;
   out_5197654036786227137[182] = 0;
   out_5197654036786227137[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5197654036786227137[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5197654036786227137[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5197654036786227137[186] = 0;
   out_5197654036786227137[187] = 0;
   out_5197654036786227137[188] = 0;
   out_5197654036786227137[189] = 0;
   out_5197654036786227137[190] = 0;
   out_5197654036786227137[191] = 0;
   out_5197654036786227137[192] = 0;
   out_5197654036786227137[193] = 0;
   out_5197654036786227137[194] = 0;
   out_5197654036786227137[195] = 0;
   out_5197654036786227137[196] = 0;
   out_5197654036786227137[197] = 0;
   out_5197654036786227137[198] = 1;
   out_5197654036786227137[199] = 0;
   out_5197654036786227137[200] = 0;
   out_5197654036786227137[201] = 0;
   out_5197654036786227137[202] = 0;
   out_5197654036786227137[203] = 0;
   out_5197654036786227137[204] = 0;
   out_5197654036786227137[205] = 0;
   out_5197654036786227137[206] = 0;
   out_5197654036786227137[207] = 0;
   out_5197654036786227137[208] = 0;
   out_5197654036786227137[209] = 0;
   out_5197654036786227137[210] = 0;
   out_5197654036786227137[211] = 0;
   out_5197654036786227137[212] = 0;
   out_5197654036786227137[213] = 0;
   out_5197654036786227137[214] = 0;
   out_5197654036786227137[215] = 0;
   out_5197654036786227137[216] = 0;
   out_5197654036786227137[217] = 0;
   out_5197654036786227137[218] = 0;
   out_5197654036786227137[219] = 0;
   out_5197654036786227137[220] = 1;
   out_5197654036786227137[221] = 0;
   out_5197654036786227137[222] = 0;
   out_5197654036786227137[223] = 0;
   out_5197654036786227137[224] = 0;
   out_5197654036786227137[225] = 0;
   out_5197654036786227137[226] = 0;
   out_5197654036786227137[227] = 0;
   out_5197654036786227137[228] = 0;
   out_5197654036786227137[229] = 0;
   out_5197654036786227137[230] = 0;
   out_5197654036786227137[231] = 0;
   out_5197654036786227137[232] = 0;
   out_5197654036786227137[233] = 0;
   out_5197654036786227137[234] = 0;
   out_5197654036786227137[235] = 0;
   out_5197654036786227137[236] = 0;
   out_5197654036786227137[237] = 0;
   out_5197654036786227137[238] = 0;
   out_5197654036786227137[239] = 0;
   out_5197654036786227137[240] = 0;
   out_5197654036786227137[241] = 0;
   out_5197654036786227137[242] = 1;
   out_5197654036786227137[243] = 0;
   out_5197654036786227137[244] = 0;
   out_5197654036786227137[245] = 0;
   out_5197654036786227137[246] = 0;
   out_5197654036786227137[247] = 0;
   out_5197654036786227137[248] = 0;
   out_5197654036786227137[249] = 0;
   out_5197654036786227137[250] = 0;
   out_5197654036786227137[251] = 0;
   out_5197654036786227137[252] = 0;
   out_5197654036786227137[253] = 0;
   out_5197654036786227137[254] = 0;
   out_5197654036786227137[255] = 0;
   out_5197654036786227137[256] = 0;
   out_5197654036786227137[257] = 0;
   out_5197654036786227137[258] = 0;
   out_5197654036786227137[259] = 0;
   out_5197654036786227137[260] = 0;
   out_5197654036786227137[261] = 0;
   out_5197654036786227137[262] = 0;
   out_5197654036786227137[263] = 0;
   out_5197654036786227137[264] = 1;
   out_5197654036786227137[265] = 0;
   out_5197654036786227137[266] = 0;
   out_5197654036786227137[267] = 0;
   out_5197654036786227137[268] = 0;
   out_5197654036786227137[269] = 0;
   out_5197654036786227137[270] = 0;
   out_5197654036786227137[271] = 0;
   out_5197654036786227137[272] = 0;
   out_5197654036786227137[273] = 0;
   out_5197654036786227137[274] = 0;
   out_5197654036786227137[275] = 0;
   out_5197654036786227137[276] = 0;
   out_5197654036786227137[277] = 0;
   out_5197654036786227137[278] = 0;
   out_5197654036786227137[279] = 0;
   out_5197654036786227137[280] = 0;
   out_5197654036786227137[281] = 0;
   out_5197654036786227137[282] = 0;
   out_5197654036786227137[283] = 0;
   out_5197654036786227137[284] = 0;
   out_5197654036786227137[285] = 0;
   out_5197654036786227137[286] = 1;
   out_5197654036786227137[287] = 0;
   out_5197654036786227137[288] = 0;
   out_5197654036786227137[289] = 0;
   out_5197654036786227137[290] = 0;
   out_5197654036786227137[291] = 0;
   out_5197654036786227137[292] = 0;
   out_5197654036786227137[293] = 0;
   out_5197654036786227137[294] = 0;
   out_5197654036786227137[295] = 0;
   out_5197654036786227137[296] = 0;
   out_5197654036786227137[297] = 0;
   out_5197654036786227137[298] = 0;
   out_5197654036786227137[299] = 0;
   out_5197654036786227137[300] = 0;
   out_5197654036786227137[301] = 0;
   out_5197654036786227137[302] = 0;
   out_5197654036786227137[303] = 0;
   out_5197654036786227137[304] = 0;
   out_5197654036786227137[305] = 0;
   out_5197654036786227137[306] = 0;
   out_5197654036786227137[307] = 0;
   out_5197654036786227137[308] = 1;
   out_5197654036786227137[309] = 0;
   out_5197654036786227137[310] = 0;
   out_5197654036786227137[311] = 0;
   out_5197654036786227137[312] = 0;
   out_5197654036786227137[313] = 0;
   out_5197654036786227137[314] = 0;
   out_5197654036786227137[315] = 0;
   out_5197654036786227137[316] = 0;
   out_5197654036786227137[317] = 0;
   out_5197654036786227137[318] = 0;
   out_5197654036786227137[319] = 0;
   out_5197654036786227137[320] = 0;
   out_5197654036786227137[321] = 0;
   out_5197654036786227137[322] = 0;
   out_5197654036786227137[323] = 0;
   out_5197654036786227137[324] = 0;
   out_5197654036786227137[325] = 0;
   out_5197654036786227137[326] = 0;
   out_5197654036786227137[327] = 0;
   out_5197654036786227137[328] = 0;
   out_5197654036786227137[329] = 0;
   out_5197654036786227137[330] = 1;
   out_5197654036786227137[331] = 0;
   out_5197654036786227137[332] = 0;
   out_5197654036786227137[333] = 0;
   out_5197654036786227137[334] = 0;
   out_5197654036786227137[335] = 0;
   out_5197654036786227137[336] = 0;
   out_5197654036786227137[337] = 0;
   out_5197654036786227137[338] = 0;
   out_5197654036786227137[339] = 0;
   out_5197654036786227137[340] = 0;
   out_5197654036786227137[341] = 0;
   out_5197654036786227137[342] = 0;
   out_5197654036786227137[343] = 0;
   out_5197654036786227137[344] = 0;
   out_5197654036786227137[345] = 0;
   out_5197654036786227137[346] = 0;
   out_5197654036786227137[347] = 0;
   out_5197654036786227137[348] = 0;
   out_5197654036786227137[349] = 0;
   out_5197654036786227137[350] = 0;
   out_5197654036786227137[351] = 0;
   out_5197654036786227137[352] = 1;
   out_5197654036786227137[353] = 0;
   out_5197654036786227137[354] = 0;
   out_5197654036786227137[355] = 0;
   out_5197654036786227137[356] = 0;
   out_5197654036786227137[357] = 0;
   out_5197654036786227137[358] = 0;
   out_5197654036786227137[359] = 0;
   out_5197654036786227137[360] = 0;
   out_5197654036786227137[361] = 0;
   out_5197654036786227137[362] = 0;
   out_5197654036786227137[363] = 0;
   out_5197654036786227137[364] = 0;
   out_5197654036786227137[365] = 0;
   out_5197654036786227137[366] = 0;
   out_5197654036786227137[367] = 0;
   out_5197654036786227137[368] = 0;
   out_5197654036786227137[369] = 0;
   out_5197654036786227137[370] = 0;
   out_5197654036786227137[371] = 0;
   out_5197654036786227137[372] = 0;
   out_5197654036786227137[373] = 0;
   out_5197654036786227137[374] = 1;
   out_5197654036786227137[375] = 0;
   out_5197654036786227137[376] = 0;
   out_5197654036786227137[377] = 0;
   out_5197654036786227137[378] = 0;
   out_5197654036786227137[379] = 0;
   out_5197654036786227137[380] = 0;
   out_5197654036786227137[381] = 0;
   out_5197654036786227137[382] = 0;
   out_5197654036786227137[383] = 0;
   out_5197654036786227137[384] = 0;
   out_5197654036786227137[385] = 0;
   out_5197654036786227137[386] = 0;
   out_5197654036786227137[387] = 0;
   out_5197654036786227137[388] = 0;
   out_5197654036786227137[389] = 0;
   out_5197654036786227137[390] = 0;
   out_5197654036786227137[391] = 0;
   out_5197654036786227137[392] = 0;
   out_5197654036786227137[393] = 0;
   out_5197654036786227137[394] = 0;
   out_5197654036786227137[395] = 0;
   out_5197654036786227137[396] = 1;
   out_5197654036786227137[397] = 0;
   out_5197654036786227137[398] = 0;
   out_5197654036786227137[399] = 0;
   out_5197654036786227137[400] = 0;
   out_5197654036786227137[401] = 0;
   out_5197654036786227137[402] = 0;
   out_5197654036786227137[403] = 0;
   out_5197654036786227137[404] = 0;
   out_5197654036786227137[405] = 0;
   out_5197654036786227137[406] = 0;
   out_5197654036786227137[407] = 0;
   out_5197654036786227137[408] = 0;
   out_5197654036786227137[409] = 0;
   out_5197654036786227137[410] = 0;
   out_5197654036786227137[411] = 0;
   out_5197654036786227137[412] = 0;
   out_5197654036786227137[413] = 0;
   out_5197654036786227137[414] = 0;
   out_5197654036786227137[415] = 0;
   out_5197654036786227137[416] = 0;
   out_5197654036786227137[417] = 0;
   out_5197654036786227137[418] = 1;
   out_5197654036786227137[419] = 0;
   out_5197654036786227137[420] = 0;
   out_5197654036786227137[421] = 0;
   out_5197654036786227137[422] = 0;
   out_5197654036786227137[423] = 0;
   out_5197654036786227137[424] = 0;
   out_5197654036786227137[425] = 0;
   out_5197654036786227137[426] = 0;
   out_5197654036786227137[427] = 0;
   out_5197654036786227137[428] = 0;
   out_5197654036786227137[429] = 0;
   out_5197654036786227137[430] = 0;
   out_5197654036786227137[431] = 0;
   out_5197654036786227137[432] = 0;
   out_5197654036786227137[433] = 0;
   out_5197654036786227137[434] = 0;
   out_5197654036786227137[435] = 0;
   out_5197654036786227137[436] = 0;
   out_5197654036786227137[437] = 0;
   out_5197654036786227137[438] = 0;
   out_5197654036786227137[439] = 0;
   out_5197654036786227137[440] = 1;
}
void h_4(double *state, double *unused, double *out_8949618456756746518) {
   out_8949618456756746518[0] = state[10] + state[13];
   out_8949618456756746518[1] = state[11] + state[14];
   out_8949618456756746518[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_59142098895015889) {
   out_59142098895015889[0] = 0;
   out_59142098895015889[1] = 0;
   out_59142098895015889[2] = 0;
   out_59142098895015889[3] = 0;
   out_59142098895015889[4] = 0;
   out_59142098895015889[5] = 0;
   out_59142098895015889[6] = 0;
   out_59142098895015889[7] = 0;
   out_59142098895015889[8] = 0;
   out_59142098895015889[9] = 0;
   out_59142098895015889[10] = 1;
   out_59142098895015889[11] = 0;
   out_59142098895015889[12] = 0;
   out_59142098895015889[13] = 1;
   out_59142098895015889[14] = 0;
   out_59142098895015889[15] = 0;
   out_59142098895015889[16] = 0;
   out_59142098895015889[17] = 0;
   out_59142098895015889[18] = 0;
   out_59142098895015889[19] = 0;
   out_59142098895015889[20] = 0;
   out_59142098895015889[21] = 0;
   out_59142098895015889[22] = 0;
   out_59142098895015889[23] = 0;
   out_59142098895015889[24] = 0;
   out_59142098895015889[25] = 0;
   out_59142098895015889[26] = 0;
   out_59142098895015889[27] = 0;
   out_59142098895015889[28] = 0;
   out_59142098895015889[29] = 0;
   out_59142098895015889[30] = 0;
   out_59142098895015889[31] = 0;
   out_59142098895015889[32] = 0;
   out_59142098895015889[33] = 1;
   out_59142098895015889[34] = 0;
   out_59142098895015889[35] = 0;
   out_59142098895015889[36] = 1;
   out_59142098895015889[37] = 0;
   out_59142098895015889[38] = 0;
   out_59142098895015889[39] = 0;
   out_59142098895015889[40] = 0;
   out_59142098895015889[41] = 0;
   out_59142098895015889[42] = 0;
   out_59142098895015889[43] = 0;
   out_59142098895015889[44] = 0;
   out_59142098895015889[45] = 0;
   out_59142098895015889[46] = 0;
   out_59142098895015889[47] = 0;
   out_59142098895015889[48] = 0;
   out_59142098895015889[49] = 0;
   out_59142098895015889[50] = 0;
   out_59142098895015889[51] = 0;
   out_59142098895015889[52] = 0;
   out_59142098895015889[53] = 0;
   out_59142098895015889[54] = 0;
   out_59142098895015889[55] = 0;
   out_59142098895015889[56] = 1;
   out_59142098895015889[57] = 0;
   out_59142098895015889[58] = 0;
   out_59142098895015889[59] = 1;
   out_59142098895015889[60] = 0;
   out_59142098895015889[61] = 0;
   out_59142098895015889[62] = 0;
   out_59142098895015889[63] = 0;
   out_59142098895015889[64] = 0;
   out_59142098895015889[65] = 0;
}
void h_9(double *state, double *unused, double *out_8154532371085123043) {
   out_8154532371085123043[0] = state[10];
   out_8154532371085123043[1] = state[11];
   out_8154532371085123043[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2948003651175095231) {
   out_2948003651175095231[0] = 0;
   out_2948003651175095231[1] = 0;
   out_2948003651175095231[2] = 0;
   out_2948003651175095231[3] = 0;
   out_2948003651175095231[4] = 0;
   out_2948003651175095231[5] = 0;
   out_2948003651175095231[6] = 0;
   out_2948003651175095231[7] = 0;
   out_2948003651175095231[8] = 0;
   out_2948003651175095231[9] = 0;
   out_2948003651175095231[10] = 1;
   out_2948003651175095231[11] = 0;
   out_2948003651175095231[12] = 0;
   out_2948003651175095231[13] = 0;
   out_2948003651175095231[14] = 0;
   out_2948003651175095231[15] = 0;
   out_2948003651175095231[16] = 0;
   out_2948003651175095231[17] = 0;
   out_2948003651175095231[18] = 0;
   out_2948003651175095231[19] = 0;
   out_2948003651175095231[20] = 0;
   out_2948003651175095231[21] = 0;
   out_2948003651175095231[22] = 0;
   out_2948003651175095231[23] = 0;
   out_2948003651175095231[24] = 0;
   out_2948003651175095231[25] = 0;
   out_2948003651175095231[26] = 0;
   out_2948003651175095231[27] = 0;
   out_2948003651175095231[28] = 0;
   out_2948003651175095231[29] = 0;
   out_2948003651175095231[30] = 0;
   out_2948003651175095231[31] = 0;
   out_2948003651175095231[32] = 0;
   out_2948003651175095231[33] = 1;
   out_2948003651175095231[34] = 0;
   out_2948003651175095231[35] = 0;
   out_2948003651175095231[36] = 0;
   out_2948003651175095231[37] = 0;
   out_2948003651175095231[38] = 0;
   out_2948003651175095231[39] = 0;
   out_2948003651175095231[40] = 0;
   out_2948003651175095231[41] = 0;
   out_2948003651175095231[42] = 0;
   out_2948003651175095231[43] = 0;
   out_2948003651175095231[44] = 0;
   out_2948003651175095231[45] = 0;
   out_2948003651175095231[46] = 0;
   out_2948003651175095231[47] = 0;
   out_2948003651175095231[48] = 0;
   out_2948003651175095231[49] = 0;
   out_2948003651175095231[50] = 0;
   out_2948003651175095231[51] = 0;
   out_2948003651175095231[52] = 0;
   out_2948003651175095231[53] = 0;
   out_2948003651175095231[54] = 0;
   out_2948003651175095231[55] = 0;
   out_2948003651175095231[56] = 1;
   out_2948003651175095231[57] = 0;
   out_2948003651175095231[58] = 0;
   out_2948003651175095231[59] = 0;
   out_2948003651175095231[60] = 0;
   out_2948003651175095231[61] = 0;
   out_2948003651175095231[62] = 0;
   out_2948003651175095231[63] = 0;
   out_2948003651175095231[64] = 0;
   out_2948003651175095231[65] = 0;
}
void h_10(double *state, double *unused, double *out_2408295147902325293) {
   out_2408295147902325293[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2408295147902325293[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2408295147902325293[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2111320417356642961) {
   out_2111320417356642961[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2111320417356642961[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2111320417356642961[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2111320417356642961[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2111320417356642961[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2111320417356642961[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2111320417356642961[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2111320417356642961[7] = 0;
   out_2111320417356642961[8] = 0;
   out_2111320417356642961[9] = 0;
   out_2111320417356642961[10] = 0;
   out_2111320417356642961[11] = 0;
   out_2111320417356642961[12] = 0;
   out_2111320417356642961[13] = 0;
   out_2111320417356642961[14] = 0;
   out_2111320417356642961[15] = 0;
   out_2111320417356642961[16] = 1;
   out_2111320417356642961[17] = 0;
   out_2111320417356642961[18] = 0;
   out_2111320417356642961[19] = 1;
   out_2111320417356642961[20] = 0;
   out_2111320417356642961[21] = 0;
   out_2111320417356642961[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2111320417356642961[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2111320417356642961[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2111320417356642961[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2111320417356642961[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2111320417356642961[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2111320417356642961[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2111320417356642961[29] = 0;
   out_2111320417356642961[30] = 0;
   out_2111320417356642961[31] = 0;
   out_2111320417356642961[32] = 0;
   out_2111320417356642961[33] = 0;
   out_2111320417356642961[34] = 0;
   out_2111320417356642961[35] = 0;
   out_2111320417356642961[36] = 0;
   out_2111320417356642961[37] = 0;
   out_2111320417356642961[38] = 0;
   out_2111320417356642961[39] = 1;
   out_2111320417356642961[40] = 0;
   out_2111320417356642961[41] = 0;
   out_2111320417356642961[42] = 1;
   out_2111320417356642961[43] = 0;
   out_2111320417356642961[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2111320417356642961[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2111320417356642961[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2111320417356642961[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2111320417356642961[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2111320417356642961[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2111320417356642961[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2111320417356642961[51] = 0;
   out_2111320417356642961[52] = 0;
   out_2111320417356642961[53] = 0;
   out_2111320417356642961[54] = 0;
   out_2111320417356642961[55] = 0;
   out_2111320417356642961[56] = 0;
   out_2111320417356642961[57] = 0;
   out_2111320417356642961[58] = 0;
   out_2111320417356642961[59] = 0;
   out_2111320417356642961[60] = 0;
   out_2111320417356642961[61] = 0;
   out_2111320417356642961[62] = 1;
   out_2111320417356642961[63] = 0;
   out_2111320417356642961[64] = 0;
   out_2111320417356642961[65] = 1;
}
void h_12(double *state, double *unused, double *out_8832198300946419974) {
   out_8832198300946419974[0] = state[0];
   out_8832198300946419974[1] = state[1];
   out_8832198300946419974[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7726270412577466381) {
   out_7726270412577466381[0] = 1;
   out_7726270412577466381[1] = 0;
   out_7726270412577466381[2] = 0;
   out_7726270412577466381[3] = 0;
   out_7726270412577466381[4] = 0;
   out_7726270412577466381[5] = 0;
   out_7726270412577466381[6] = 0;
   out_7726270412577466381[7] = 0;
   out_7726270412577466381[8] = 0;
   out_7726270412577466381[9] = 0;
   out_7726270412577466381[10] = 0;
   out_7726270412577466381[11] = 0;
   out_7726270412577466381[12] = 0;
   out_7726270412577466381[13] = 0;
   out_7726270412577466381[14] = 0;
   out_7726270412577466381[15] = 0;
   out_7726270412577466381[16] = 0;
   out_7726270412577466381[17] = 0;
   out_7726270412577466381[18] = 0;
   out_7726270412577466381[19] = 0;
   out_7726270412577466381[20] = 0;
   out_7726270412577466381[21] = 0;
   out_7726270412577466381[22] = 0;
   out_7726270412577466381[23] = 1;
   out_7726270412577466381[24] = 0;
   out_7726270412577466381[25] = 0;
   out_7726270412577466381[26] = 0;
   out_7726270412577466381[27] = 0;
   out_7726270412577466381[28] = 0;
   out_7726270412577466381[29] = 0;
   out_7726270412577466381[30] = 0;
   out_7726270412577466381[31] = 0;
   out_7726270412577466381[32] = 0;
   out_7726270412577466381[33] = 0;
   out_7726270412577466381[34] = 0;
   out_7726270412577466381[35] = 0;
   out_7726270412577466381[36] = 0;
   out_7726270412577466381[37] = 0;
   out_7726270412577466381[38] = 0;
   out_7726270412577466381[39] = 0;
   out_7726270412577466381[40] = 0;
   out_7726270412577466381[41] = 0;
   out_7726270412577466381[42] = 0;
   out_7726270412577466381[43] = 0;
   out_7726270412577466381[44] = 0;
   out_7726270412577466381[45] = 0;
   out_7726270412577466381[46] = 1;
   out_7726270412577466381[47] = 0;
   out_7726270412577466381[48] = 0;
   out_7726270412577466381[49] = 0;
   out_7726270412577466381[50] = 0;
   out_7726270412577466381[51] = 0;
   out_7726270412577466381[52] = 0;
   out_7726270412577466381[53] = 0;
   out_7726270412577466381[54] = 0;
   out_7726270412577466381[55] = 0;
   out_7726270412577466381[56] = 0;
   out_7726270412577466381[57] = 0;
   out_7726270412577466381[58] = 0;
   out_7726270412577466381[59] = 0;
   out_7726270412577466381[60] = 0;
   out_7726270412577466381[61] = 0;
   out_7726270412577466381[62] = 0;
   out_7726270412577466381[63] = 0;
   out_7726270412577466381[64] = 0;
   out_7726270412577466381[65] = 0;
}
void h_31(double *state, double *unused, double *out_7166568566371386790) {
   out_7166568566371386790[0] = state[7];
   out_7166568566371386790[1] = state[8];
   out_7166568566371386790[2] = state[9];
}
void H_31(double *state, double *unused, double *out_3425804156267623265) {
   out_3425804156267623265[0] = 0;
   out_3425804156267623265[1] = 0;
   out_3425804156267623265[2] = 0;
   out_3425804156267623265[3] = 0;
   out_3425804156267623265[4] = 0;
   out_3425804156267623265[5] = 0;
   out_3425804156267623265[6] = 0;
   out_3425804156267623265[7] = 1;
   out_3425804156267623265[8] = 0;
   out_3425804156267623265[9] = 0;
   out_3425804156267623265[10] = 0;
   out_3425804156267623265[11] = 0;
   out_3425804156267623265[12] = 0;
   out_3425804156267623265[13] = 0;
   out_3425804156267623265[14] = 0;
   out_3425804156267623265[15] = 0;
   out_3425804156267623265[16] = 0;
   out_3425804156267623265[17] = 0;
   out_3425804156267623265[18] = 0;
   out_3425804156267623265[19] = 0;
   out_3425804156267623265[20] = 0;
   out_3425804156267623265[21] = 0;
   out_3425804156267623265[22] = 0;
   out_3425804156267623265[23] = 0;
   out_3425804156267623265[24] = 0;
   out_3425804156267623265[25] = 0;
   out_3425804156267623265[26] = 0;
   out_3425804156267623265[27] = 0;
   out_3425804156267623265[28] = 0;
   out_3425804156267623265[29] = 0;
   out_3425804156267623265[30] = 1;
   out_3425804156267623265[31] = 0;
   out_3425804156267623265[32] = 0;
   out_3425804156267623265[33] = 0;
   out_3425804156267623265[34] = 0;
   out_3425804156267623265[35] = 0;
   out_3425804156267623265[36] = 0;
   out_3425804156267623265[37] = 0;
   out_3425804156267623265[38] = 0;
   out_3425804156267623265[39] = 0;
   out_3425804156267623265[40] = 0;
   out_3425804156267623265[41] = 0;
   out_3425804156267623265[42] = 0;
   out_3425804156267623265[43] = 0;
   out_3425804156267623265[44] = 0;
   out_3425804156267623265[45] = 0;
   out_3425804156267623265[46] = 0;
   out_3425804156267623265[47] = 0;
   out_3425804156267623265[48] = 0;
   out_3425804156267623265[49] = 0;
   out_3425804156267623265[50] = 0;
   out_3425804156267623265[51] = 0;
   out_3425804156267623265[52] = 0;
   out_3425804156267623265[53] = 1;
   out_3425804156267623265[54] = 0;
   out_3425804156267623265[55] = 0;
   out_3425804156267623265[56] = 0;
   out_3425804156267623265[57] = 0;
   out_3425804156267623265[58] = 0;
   out_3425804156267623265[59] = 0;
   out_3425804156267623265[60] = 0;
   out_3425804156267623265[61] = 0;
   out_3425804156267623265[62] = 0;
   out_3425804156267623265[63] = 0;
   out_3425804156267623265[64] = 0;
   out_3425804156267623265[65] = 0;
}
void h_32(double *state, double *unused, double *out_6656861460542203515) {
   out_6656861460542203515[0] = state[3];
   out_6656861460542203515[1] = state[4];
   out_6656861460542203515[2] = state[5];
   out_6656861460542203515[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5191252464388653933) {
   out_5191252464388653933[0] = 0;
   out_5191252464388653933[1] = 0;
   out_5191252464388653933[2] = 0;
   out_5191252464388653933[3] = 1;
   out_5191252464388653933[4] = 0;
   out_5191252464388653933[5] = 0;
   out_5191252464388653933[6] = 0;
   out_5191252464388653933[7] = 0;
   out_5191252464388653933[8] = 0;
   out_5191252464388653933[9] = 0;
   out_5191252464388653933[10] = 0;
   out_5191252464388653933[11] = 0;
   out_5191252464388653933[12] = 0;
   out_5191252464388653933[13] = 0;
   out_5191252464388653933[14] = 0;
   out_5191252464388653933[15] = 0;
   out_5191252464388653933[16] = 0;
   out_5191252464388653933[17] = 0;
   out_5191252464388653933[18] = 0;
   out_5191252464388653933[19] = 0;
   out_5191252464388653933[20] = 0;
   out_5191252464388653933[21] = 0;
   out_5191252464388653933[22] = 0;
   out_5191252464388653933[23] = 0;
   out_5191252464388653933[24] = 0;
   out_5191252464388653933[25] = 0;
   out_5191252464388653933[26] = 1;
   out_5191252464388653933[27] = 0;
   out_5191252464388653933[28] = 0;
   out_5191252464388653933[29] = 0;
   out_5191252464388653933[30] = 0;
   out_5191252464388653933[31] = 0;
   out_5191252464388653933[32] = 0;
   out_5191252464388653933[33] = 0;
   out_5191252464388653933[34] = 0;
   out_5191252464388653933[35] = 0;
   out_5191252464388653933[36] = 0;
   out_5191252464388653933[37] = 0;
   out_5191252464388653933[38] = 0;
   out_5191252464388653933[39] = 0;
   out_5191252464388653933[40] = 0;
   out_5191252464388653933[41] = 0;
   out_5191252464388653933[42] = 0;
   out_5191252464388653933[43] = 0;
   out_5191252464388653933[44] = 0;
   out_5191252464388653933[45] = 0;
   out_5191252464388653933[46] = 0;
   out_5191252464388653933[47] = 0;
   out_5191252464388653933[48] = 0;
   out_5191252464388653933[49] = 1;
   out_5191252464388653933[50] = 0;
   out_5191252464388653933[51] = 0;
   out_5191252464388653933[52] = 0;
   out_5191252464388653933[53] = 0;
   out_5191252464388653933[54] = 0;
   out_5191252464388653933[55] = 0;
   out_5191252464388653933[56] = 0;
   out_5191252464388653933[57] = 0;
   out_5191252464388653933[58] = 0;
   out_5191252464388653933[59] = 0;
   out_5191252464388653933[60] = 0;
   out_5191252464388653933[61] = 0;
   out_5191252464388653933[62] = 0;
   out_5191252464388653933[63] = 0;
   out_5191252464388653933[64] = 0;
   out_5191252464388653933[65] = 0;
   out_5191252464388653933[66] = 0;
   out_5191252464388653933[67] = 0;
   out_5191252464388653933[68] = 0;
   out_5191252464388653933[69] = 0;
   out_5191252464388653933[70] = 0;
   out_5191252464388653933[71] = 0;
   out_5191252464388653933[72] = 1;
   out_5191252464388653933[73] = 0;
   out_5191252464388653933[74] = 0;
   out_5191252464388653933[75] = 0;
   out_5191252464388653933[76] = 0;
   out_5191252464388653933[77] = 0;
   out_5191252464388653933[78] = 0;
   out_5191252464388653933[79] = 0;
   out_5191252464388653933[80] = 0;
   out_5191252464388653933[81] = 0;
   out_5191252464388653933[82] = 0;
   out_5191252464388653933[83] = 0;
   out_5191252464388653933[84] = 0;
   out_5191252464388653933[85] = 0;
   out_5191252464388653933[86] = 0;
   out_5191252464388653933[87] = 0;
}
void h_13(double *state, double *unused, double *out_2708158829041384267) {
   out_2708158829041384267[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2708158829041384267[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2708158829041384267[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7835345973033672311) {
   out_7835345973033672311[0] = 0;
   out_7835345973033672311[1] = 0;
   out_7835345973033672311[2] = 0;
   out_7835345973033672311[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7835345973033672311[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7835345973033672311[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7835345973033672311[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7835345973033672311[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7835345973033672311[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7835345973033672311[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7835345973033672311[10] = 0;
   out_7835345973033672311[11] = 0;
   out_7835345973033672311[12] = 0;
   out_7835345973033672311[13] = 0;
   out_7835345973033672311[14] = 0;
   out_7835345973033672311[15] = 0;
   out_7835345973033672311[16] = 0;
   out_7835345973033672311[17] = 0;
   out_7835345973033672311[18] = 0;
   out_7835345973033672311[19] = 0;
   out_7835345973033672311[20] = 0;
   out_7835345973033672311[21] = 0;
   out_7835345973033672311[22] = 0;
   out_7835345973033672311[23] = 0;
   out_7835345973033672311[24] = 0;
   out_7835345973033672311[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7835345973033672311[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7835345973033672311[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7835345973033672311[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7835345973033672311[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7835345973033672311[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7835345973033672311[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7835345973033672311[32] = 0;
   out_7835345973033672311[33] = 0;
   out_7835345973033672311[34] = 0;
   out_7835345973033672311[35] = 0;
   out_7835345973033672311[36] = 0;
   out_7835345973033672311[37] = 0;
   out_7835345973033672311[38] = 0;
   out_7835345973033672311[39] = 0;
   out_7835345973033672311[40] = 0;
   out_7835345973033672311[41] = 0;
   out_7835345973033672311[42] = 0;
   out_7835345973033672311[43] = 0;
   out_7835345973033672311[44] = 0;
   out_7835345973033672311[45] = 0;
   out_7835345973033672311[46] = 0;
   out_7835345973033672311[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7835345973033672311[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7835345973033672311[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7835345973033672311[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7835345973033672311[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7835345973033672311[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7835345973033672311[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7835345973033672311[54] = 0;
   out_7835345973033672311[55] = 0;
   out_7835345973033672311[56] = 0;
   out_7835345973033672311[57] = 0;
   out_7835345973033672311[58] = 0;
   out_7835345973033672311[59] = 0;
   out_7835345973033672311[60] = 0;
   out_7835345973033672311[61] = 0;
   out_7835345973033672311[62] = 0;
   out_7835345973033672311[63] = 0;
   out_7835345973033672311[64] = 0;
   out_7835345973033672311[65] = 0;
}
void h_14(double *state, double *unused, double *out_8154532371085123043) {
   out_8154532371085123043[0] = state[10];
   out_8154532371085123043[1] = state[11];
   out_8154532371085123043[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2948003651175095231) {
   out_2948003651175095231[0] = 0;
   out_2948003651175095231[1] = 0;
   out_2948003651175095231[2] = 0;
   out_2948003651175095231[3] = 0;
   out_2948003651175095231[4] = 0;
   out_2948003651175095231[5] = 0;
   out_2948003651175095231[6] = 0;
   out_2948003651175095231[7] = 0;
   out_2948003651175095231[8] = 0;
   out_2948003651175095231[9] = 0;
   out_2948003651175095231[10] = 1;
   out_2948003651175095231[11] = 0;
   out_2948003651175095231[12] = 0;
   out_2948003651175095231[13] = 0;
   out_2948003651175095231[14] = 0;
   out_2948003651175095231[15] = 0;
   out_2948003651175095231[16] = 0;
   out_2948003651175095231[17] = 0;
   out_2948003651175095231[18] = 0;
   out_2948003651175095231[19] = 0;
   out_2948003651175095231[20] = 0;
   out_2948003651175095231[21] = 0;
   out_2948003651175095231[22] = 0;
   out_2948003651175095231[23] = 0;
   out_2948003651175095231[24] = 0;
   out_2948003651175095231[25] = 0;
   out_2948003651175095231[26] = 0;
   out_2948003651175095231[27] = 0;
   out_2948003651175095231[28] = 0;
   out_2948003651175095231[29] = 0;
   out_2948003651175095231[30] = 0;
   out_2948003651175095231[31] = 0;
   out_2948003651175095231[32] = 0;
   out_2948003651175095231[33] = 1;
   out_2948003651175095231[34] = 0;
   out_2948003651175095231[35] = 0;
   out_2948003651175095231[36] = 0;
   out_2948003651175095231[37] = 0;
   out_2948003651175095231[38] = 0;
   out_2948003651175095231[39] = 0;
   out_2948003651175095231[40] = 0;
   out_2948003651175095231[41] = 0;
   out_2948003651175095231[42] = 0;
   out_2948003651175095231[43] = 0;
   out_2948003651175095231[44] = 0;
   out_2948003651175095231[45] = 0;
   out_2948003651175095231[46] = 0;
   out_2948003651175095231[47] = 0;
   out_2948003651175095231[48] = 0;
   out_2948003651175095231[49] = 0;
   out_2948003651175095231[50] = 0;
   out_2948003651175095231[51] = 0;
   out_2948003651175095231[52] = 0;
   out_2948003651175095231[53] = 0;
   out_2948003651175095231[54] = 0;
   out_2948003651175095231[55] = 0;
   out_2948003651175095231[56] = 1;
   out_2948003651175095231[57] = 0;
   out_2948003651175095231[58] = 0;
   out_2948003651175095231[59] = 0;
   out_2948003651175095231[60] = 0;
   out_2948003651175095231[61] = 0;
   out_2948003651175095231[62] = 0;
   out_2948003651175095231[63] = 0;
   out_2948003651175095231[64] = 0;
   out_2948003651175095231[65] = 0;
}
void h_33(double *state, double *unused, double *out_5234659048996153164) {
   out_5234659048996153164[0] = state[16];
   out_5234659048996153164[1] = state[17];
   out_5234659048996153164[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4824353624168213922) {
   out_4824353624168213922[0] = 0;
   out_4824353624168213922[1] = 0;
   out_4824353624168213922[2] = 0;
   out_4824353624168213922[3] = 0;
   out_4824353624168213922[4] = 0;
   out_4824353624168213922[5] = 0;
   out_4824353624168213922[6] = 0;
   out_4824353624168213922[7] = 0;
   out_4824353624168213922[8] = 0;
   out_4824353624168213922[9] = 0;
   out_4824353624168213922[10] = 0;
   out_4824353624168213922[11] = 0;
   out_4824353624168213922[12] = 0;
   out_4824353624168213922[13] = 0;
   out_4824353624168213922[14] = 0;
   out_4824353624168213922[15] = 0;
   out_4824353624168213922[16] = 1;
   out_4824353624168213922[17] = 0;
   out_4824353624168213922[18] = 0;
   out_4824353624168213922[19] = 0;
   out_4824353624168213922[20] = 0;
   out_4824353624168213922[21] = 0;
   out_4824353624168213922[22] = 0;
   out_4824353624168213922[23] = 0;
   out_4824353624168213922[24] = 0;
   out_4824353624168213922[25] = 0;
   out_4824353624168213922[26] = 0;
   out_4824353624168213922[27] = 0;
   out_4824353624168213922[28] = 0;
   out_4824353624168213922[29] = 0;
   out_4824353624168213922[30] = 0;
   out_4824353624168213922[31] = 0;
   out_4824353624168213922[32] = 0;
   out_4824353624168213922[33] = 0;
   out_4824353624168213922[34] = 0;
   out_4824353624168213922[35] = 0;
   out_4824353624168213922[36] = 0;
   out_4824353624168213922[37] = 0;
   out_4824353624168213922[38] = 0;
   out_4824353624168213922[39] = 1;
   out_4824353624168213922[40] = 0;
   out_4824353624168213922[41] = 0;
   out_4824353624168213922[42] = 0;
   out_4824353624168213922[43] = 0;
   out_4824353624168213922[44] = 0;
   out_4824353624168213922[45] = 0;
   out_4824353624168213922[46] = 0;
   out_4824353624168213922[47] = 0;
   out_4824353624168213922[48] = 0;
   out_4824353624168213922[49] = 0;
   out_4824353624168213922[50] = 0;
   out_4824353624168213922[51] = 0;
   out_4824353624168213922[52] = 0;
   out_4824353624168213922[53] = 0;
   out_4824353624168213922[54] = 0;
   out_4824353624168213922[55] = 0;
   out_4824353624168213922[56] = 0;
   out_4824353624168213922[57] = 0;
   out_4824353624168213922[58] = 0;
   out_4824353624168213922[59] = 0;
   out_4824353624168213922[60] = 0;
   out_4824353624168213922[61] = 0;
   out_4824353624168213922[62] = 1;
   out_4824353624168213922[63] = 0;
   out_4824353624168213922[64] = 0;
   out_4824353624168213922[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1975042085507842433) {
  H(in_vec, out_1975042085507842433);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6316537518300744749) {
  err_fun(nom_x, delta_x, out_6316537518300744749);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5437110354054996620) {
  inv_err_fun(nom_x, true_x, out_5437110354054996620);
}
void live_H_mod_fun(double *state, double *out_6104230166974042109) {
  H_mod_fun(state, out_6104230166974042109);
}
void live_f_fun(double *state, double dt, double *out_6857365862403648822) {
  f_fun(state,  dt, out_6857365862403648822);
}
void live_F_fun(double *state, double dt, double *out_5197654036786227137) {
  F_fun(state,  dt, out_5197654036786227137);
}
void live_h_4(double *state, double *unused, double *out_8949618456756746518) {
  h_4(state, unused, out_8949618456756746518);
}
void live_H_4(double *state, double *unused, double *out_59142098895015889) {
  H_4(state, unused, out_59142098895015889);
}
void live_h_9(double *state, double *unused, double *out_8154532371085123043) {
  h_9(state, unused, out_8154532371085123043);
}
void live_H_9(double *state, double *unused, double *out_2948003651175095231) {
  H_9(state, unused, out_2948003651175095231);
}
void live_h_10(double *state, double *unused, double *out_2408295147902325293) {
  h_10(state, unused, out_2408295147902325293);
}
void live_H_10(double *state, double *unused, double *out_2111320417356642961) {
  H_10(state, unused, out_2111320417356642961);
}
void live_h_12(double *state, double *unused, double *out_8832198300946419974) {
  h_12(state, unused, out_8832198300946419974);
}
void live_H_12(double *state, double *unused, double *out_7726270412577466381) {
  H_12(state, unused, out_7726270412577466381);
}
void live_h_31(double *state, double *unused, double *out_7166568566371386790) {
  h_31(state, unused, out_7166568566371386790);
}
void live_H_31(double *state, double *unused, double *out_3425804156267623265) {
  H_31(state, unused, out_3425804156267623265);
}
void live_h_32(double *state, double *unused, double *out_6656861460542203515) {
  h_32(state, unused, out_6656861460542203515);
}
void live_H_32(double *state, double *unused, double *out_5191252464388653933) {
  H_32(state, unused, out_5191252464388653933);
}
void live_h_13(double *state, double *unused, double *out_2708158829041384267) {
  h_13(state, unused, out_2708158829041384267);
}
void live_H_13(double *state, double *unused, double *out_7835345973033672311) {
  H_13(state, unused, out_7835345973033672311);
}
void live_h_14(double *state, double *unused, double *out_8154532371085123043) {
  h_14(state, unused, out_8154532371085123043);
}
void live_H_14(double *state, double *unused, double *out_2948003651175095231) {
  H_14(state, unused, out_2948003651175095231);
}
void live_h_33(double *state, double *unused, double *out_5234659048996153164) {
  h_33(state, unused, out_5234659048996153164);
}
void live_H_33(double *state, double *unused, double *out_4824353624168213922) {
  H_33(state, unused, out_4824353624168213922);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
