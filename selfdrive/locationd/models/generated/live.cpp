#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1180236145992489736) {
   out_1180236145992489736[0] = 0;
   out_1180236145992489736[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1180236145992489736[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1180236145992489736[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1180236145992489736[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1180236145992489736[5] = -sin(in_vec[1]);
   out_1180236145992489736[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1180236145992489736[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1180236145992489736[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1180236145992489736[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1180236145992489736[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1180236145992489736[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1180236145992489736[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1180236145992489736[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1180236145992489736[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1180236145992489736[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1180236145992489736[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1180236145992489736[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6715227640650976900) {
   out_6715227640650976900[0] = delta_x[0] + nom_x[0];
   out_6715227640650976900[1] = delta_x[1] + nom_x[1];
   out_6715227640650976900[2] = delta_x[2] + nom_x[2];
   out_6715227640650976900[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6715227640650976900[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6715227640650976900[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6715227640650976900[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6715227640650976900[7] = delta_x[6] + nom_x[7];
   out_6715227640650976900[8] = delta_x[7] + nom_x[8];
   out_6715227640650976900[9] = delta_x[8] + nom_x[9];
   out_6715227640650976900[10] = delta_x[9] + nom_x[10];
   out_6715227640650976900[11] = delta_x[10] + nom_x[11];
   out_6715227640650976900[12] = delta_x[11] + nom_x[12];
   out_6715227640650976900[13] = delta_x[12] + nom_x[13];
   out_6715227640650976900[14] = delta_x[13] + nom_x[14];
   out_6715227640650976900[15] = delta_x[14] + nom_x[15];
   out_6715227640650976900[16] = delta_x[15] + nom_x[16];
   out_6715227640650976900[17] = delta_x[16] + nom_x[17];
   out_6715227640650976900[18] = delta_x[17] + nom_x[18];
   out_6715227640650976900[19] = delta_x[18] + nom_x[19];
   out_6715227640650976900[20] = delta_x[19] + nom_x[20];
   out_6715227640650976900[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1548982549716130313) {
   out_1548982549716130313[0] = -nom_x[0] + true_x[0];
   out_1548982549716130313[1] = -nom_x[1] + true_x[1];
   out_1548982549716130313[2] = -nom_x[2] + true_x[2];
   out_1548982549716130313[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1548982549716130313[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1548982549716130313[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1548982549716130313[6] = -nom_x[7] + true_x[7];
   out_1548982549716130313[7] = -nom_x[8] + true_x[8];
   out_1548982549716130313[8] = -nom_x[9] + true_x[9];
   out_1548982549716130313[9] = -nom_x[10] + true_x[10];
   out_1548982549716130313[10] = -nom_x[11] + true_x[11];
   out_1548982549716130313[11] = -nom_x[12] + true_x[12];
   out_1548982549716130313[12] = -nom_x[13] + true_x[13];
   out_1548982549716130313[13] = -nom_x[14] + true_x[14];
   out_1548982549716130313[14] = -nom_x[15] + true_x[15];
   out_1548982549716130313[15] = -nom_x[16] + true_x[16];
   out_1548982549716130313[16] = -nom_x[17] + true_x[17];
   out_1548982549716130313[17] = -nom_x[18] + true_x[18];
   out_1548982549716130313[18] = -nom_x[19] + true_x[19];
   out_1548982549716130313[19] = -nom_x[20] + true_x[20];
   out_1548982549716130313[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2860172969077957858) {
   out_2860172969077957858[0] = 1.0;
   out_2860172969077957858[1] = 0;
   out_2860172969077957858[2] = 0;
   out_2860172969077957858[3] = 0;
   out_2860172969077957858[4] = 0;
   out_2860172969077957858[5] = 0;
   out_2860172969077957858[6] = 0;
   out_2860172969077957858[7] = 0;
   out_2860172969077957858[8] = 0;
   out_2860172969077957858[9] = 0;
   out_2860172969077957858[10] = 0;
   out_2860172969077957858[11] = 0;
   out_2860172969077957858[12] = 0;
   out_2860172969077957858[13] = 0;
   out_2860172969077957858[14] = 0;
   out_2860172969077957858[15] = 0;
   out_2860172969077957858[16] = 0;
   out_2860172969077957858[17] = 0;
   out_2860172969077957858[18] = 0;
   out_2860172969077957858[19] = 0;
   out_2860172969077957858[20] = 0;
   out_2860172969077957858[21] = 0;
   out_2860172969077957858[22] = 1.0;
   out_2860172969077957858[23] = 0;
   out_2860172969077957858[24] = 0;
   out_2860172969077957858[25] = 0;
   out_2860172969077957858[26] = 0;
   out_2860172969077957858[27] = 0;
   out_2860172969077957858[28] = 0;
   out_2860172969077957858[29] = 0;
   out_2860172969077957858[30] = 0;
   out_2860172969077957858[31] = 0;
   out_2860172969077957858[32] = 0;
   out_2860172969077957858[33] = 0;
   out_2860172969077957858[34] = 0;
   out_2860172969077957858[35] = 0;
   out_2860172969077957858[36] = 0;
   out_2860172969077957858[37] = 0;
   out_2860172969077957858[38] = 0;
   out_2860172969077957858[39] = 0;
   out_2860172969077957858[40] = 0;
   out_2860172969077957858[41] = 0;
   out_2860172969077957858[42] = 0;
   out_2860172969077957858[43] = 0;
   out_2860172969077957858[44] = 1.0;
   out_2860172969077957858[45] = 0;
   out_2860172969077957858[46] = 0;
   out_2860172969077957858[47] = 0;
   out_2860172969077957858[48] = 0;
   out_2860172969077957858[49] = 0;
   out_2860172969077957858[50] = 0;
   out_2860172969077957858[51] = 0;
   out_2860172969077957858[52] = 0;
   out_2860172969077957858[53] = 0;
   out_2860172969077957858[54] = 0;
   out_2860172969077957858[55] = 0;
   out_2860172969077957858[56] = 0;
   out_2860172969077957858[57] = 0;
   out_2860172969077957858[58] = 0;
   out_2860172969077957858[59] = 0;
   out_2860172969077957858[60] = 0;
   out_2860172969077957858[61] = 0;
   out_2860172969077957858[62] = 0;
   out_2860172969077957858[63] = 0;
   out_2860172969077957858[64] = 0;
   out_2860172969077957858[65] = 0;
   out_2860172969077957858[66] = -0.5*state[4];
   out_2860172969077957858[67] = -0.5*state[5];
   out_2860172969077957858[68] = -0.5*state[6];
   out_2860172969077957858[69] = 0;
   out_2860172969077957858[70] = 0;
   out_2860172969077957858[71] = 0;
   out_2860172969077957858[72] = 0;
   out_2860172969077957858[73] = 0;
   out_2860172969077957858[74] = 0;
   out_2860172969077957858[75] = 0;
   out_2860172969077957858[76] = 0;
   out_2860172969077957858[77] = 0;
   out_2860172969077957858[78] = 0;
   out_2860172969077957858[79] = 0;
   out_2860172969077957858[80] = 0;
   out_2860172969077957858[81] = 0;
   out_2860172969077957858[82] = 0;
   out_2860172969077957858[83] = 0;
   out_2860172969077957858[84] = 0;
   out_2860172969077957858[85] = 0;
   out_2860172969077957858[86] = 0;
   out_2860172969077957858[87] = 0.5*state[3];
   out_2860172969077957858[88] = 0.5*state[6];
   out_2860172969077957858[89] = -0.5*state[5];
   out_2860172969077957858[90] = 0;
   out_2860172969077957858[91] = 0;
   out_2860172969077957858[92] = 0;
   out_2860172969077957858[93] = 0;
   out_2860172969077957858[94] = 0;
   out_2860172969077957858[95] = 0;
   out_2860172969077957858[96] = 0;
   out_2860172969077957858[97] = 0;
   out_2860172969077957858[98] = 0;
   out_2860172969077957858[99] = 0;
   out_2860172969077957858[100] = 0;
   out_2860172969077957858[101] = 0;
   out_2860172969077957858[102] = 0;
   out_2860172969077957858[103] = 0;
   out_2860172969077957858[104] = 0;
   out_2860172969077957858[105] = 0;
   out_2860172969077957858[106] = 0;
   out_2860172969077957858[107] = 0;
   out_2860172969077957858[108] = -0.5*state[6];
   out_2860172969077957858[109] = 0.5*state[3];
   out_2860172969077957858[110] = 0.5*state[4];
   out_2860172969077957858[111] = 0;
   out_2860172969077957858[112] = 0;
   out_2860172969077957858[113] = 0;
   out_2860172969077957858[114] = 0;
   out_2860172969077957858[115] = 0;
   out_2860172969077957858[116] = 0;
   out_2860172969077957858[117] = 0;
   out_2860172969077957858[118] = 0;
   out_2860172969077957858[119] = 0;
   out_2860172969077957858[120] = 0;
   out_2860172969077957858[121] = 0;
   out_2860172969077957858[122] = 0;
   out_2860172969077957858[123] = 0;
   out_2860172969077957858[124] = 0;
   out_2860172969077957858[125] = 0;
   out_2860172969077957858[126] = 0;
   out_2860172969077957858[127] = 0;
   out_2860172969077957858[128] = 0;
   out_2860172969077957858[129] = 0.5*state[5];
   out_2860172969077957858[130] = -0.5*state[4];
   out_2860172969077957858[131] = 0.5*state[3];
   out_2860172969077957858[132] = 0;
   out_2860172969077957858[133] = 0;
   out_2860172969077957858[134] = 0;
   out_2860172969077957858[135] = 0;
   out_2860172969077957858[136] = 0;
   out_2860172969077957858[137] = 0;
   out_2860172969077957858[138] = 0;
   out_2860172969077957858[139] = 0;
   out_2860172969077957858[140] = 0;
   out_2860172969077957858[141] = 0;
   out_2860172969077957858[142] = 0;
   out_2860172969077957858[143] = 0;
   out_2860172969077957858[144] = 0;
   out_2860172969077957858[145] = 0;
   out_2860172969077957858[146] = 0;
   out_2860172969077957858[147] = 0;
   out_2860172969077957858[148] = 0;
   out_2860172969077957858[149] = 0;
   out_2860172969077957858[150] = 0;
   out_2860172969077957858[151] = 0;
   out_2860172969077957858[152] = 0;
   out_2860172969077957858[153] = 1.0;
   out_2860172969077957858[154] = 0;
   out_2860172969077957858[155] = 0;
   out_2860172969077957858[156] = 0;
   out_2860172969077957858[157] = 0;
   out_2860172969077957858[158] = 0;
   out_2860172969077957858[159] = 0;
   out_2860172969077957858[160] = 0;
   out_2860172969077957858[161] = 0;
   out_2860172969077957858[162] = 0;
   out_2860172969077957858[163] = 0;
   out_2860172969077957858[164] = 0;
   out_2860172969077957858[165] = 0;
   out_2860172969077957858[166] = 0;
   out_2860172969077957858[167] = 0;
   out_2860172969077957858[168] = 0;
   out_2860172969077957858[169] = 0;
   out_2860172969077957858[170] = 0;
   out_2860172969077957858[171] = 0;
   out_2860172969077957858[172] = 0;
   out_2860172969077957858[173] = 0;
   out_2860172969077957858[174] = 0;
   out_2860172969077957858[175] = 1.0;
   out_2860172969077957858[176] = 0;
   out_2860172969077957858[177] = 0;
   out_2860172969077957858[178] = 0;
   out_2860172969077957858[179] = 0;
   out_2860172969077957858[180] = 0;
   out_2860172969077957858[181] = 0;
   out_2860172969077957858[182] = 0;
   out_2860172969077957858[183] = 0;
   out_2860172969077957858[184] = 0;
   out_2860172969077957858[185] = 0;
   out_2860172969077957858[186] = 0;
   out_2860172969077957858[187] = 0;
   out_2860172969077957858[188] = 0;
   out_2860172969077957858[189] = 0;
   out_2860172969077957858[190] = 0;
   out_2860172969077957858[191] = 0;
   out_2860172969077957858[192] = 0;
   out_2860172969077957858[193] = 0;
   out_2860172969077957858[194] = 0;
   out_2860172969077957858[195] = 0;
   out_2860172969077957858[196] = 0;
   out_2860172969077957858[197] = 1.0;
   out_2860172969077957858[198] = 0;
   out_2860172969077957858[199] = 0;
   out_2860172969077957858[200] = 0;
   out_2860172969077957858[201] = 0;
   out_2860172969077957858[202] = 0;
   out_2860172969077957858[203] = 0;
   out_2860172969077957858[204] = 0;
   out_2860172969077957858[205] = 0;
   out_2860172969077957858[206] = 0;
   out_2860172969077957858[207] = 0;
   out_2860172969077957858[208] = 0;
   out_2860172969077957858[209] = 0;
   out_2860172969077957858[210] = 0;
   out_2860172969077957858[211] = 0;
   out_2860172969077957858[212] = 0;
   out_2860172969077957858[213] = 0;
   out_2860172969077957858[214] = 0;
   out_2860172969077957858[215] = 0;
   out_2860172969077957858[216] = 0;
   out_2860172969077957858[217] = 0;
   out_2860172969077957858[218] = 0;
   out_2860172969077957858[219] = 1.0;
   out_2860172969077957858[220] = 0;
   out_2860172969077957858[221] = 0;
   out_2860172969077957858[222] = 0;
   out_2860172969077957858[223] = 0;
   out_2860172969077957858[224] = 0;
   out_2860172969077957858[225] = 0;
   out_2860172969077957858[226] = 0;
   out_2860172969077957858[227] = 0;
   out_2860172969077957858[228] = 0;
   out_2860172969077957858[229] = 0;
   out_2860172969077957858[230] = 0;
   out_2860172969077957858[231] = 0;
   out_2860172969077957858[232] = 0;
   out_2860172969077957858[233] = 0;
   out_2860172969077957858[234] = 0;
   out_2860172969077957858[235] = 0;
   out_2860172969077957858[236] = 0;
   out_2860172969077957858[237] = 0;
   out_2860172969077957858[238] = 0;
   out_2860172969077957858[239] = 0;
   out_2860172969077957858[240] = 0;
   out_2860172969077957858[241] = 1.0;
   out_2860172969077957858[242] = 0;
   out_2860172969077957858[243] = 0;
   out_2860172969077957858[244] = 0;
   out_2860172969077957858[245] = 0;
   out_2860172969077957858[246] = 0;
   out_2860172969077957858[247] = 0;
   out_2860172969077957858[248] = 0;
   out_2860172969077957858[249] = 0;
   out_2860172969077957858[250] = 0;
   out_2860172969077957858[251] = 0;
   out_2860172969077957858[252] = 0;
   out_2860172969077957858[253] = 0;
   out_2860172969077957858[254] = 0;
   out_2860172969077957858[255] = 0;
   out_2860172969077957858[256] = 0;
   out_2860172969077957858[257] = 0;
   out_2860172969077957858[258] = 0;
   out_2860172969077957858[259] = 0;
   out_2860172969077957858[260] = 0;
   out_2860172969077957858[261] = 0;
   out_2860172969077957858[262] = 0;
   out_2860172969077957858[263] = 1.0;
   out_2860172969077957858[264] = 0;
   out_2860172969077957858[265] = 0;
   out_2860172969077957858[266] = 0;
   out_2860172969077957858[267] = 0;
   out_2860172969077957858[268] = 0;
   out_2860172969077957858[269] = 0;
   out_2860172969077957858[270] = 0;
   out_2860172969077957858[271] = 0;
   out_2860172969077957858[272] = 0;
   out_2860172969077957858[273] = 0;
   out_2860172969077957858[274] = 0;
   out_2860172969077957858[275] = 0;
   out_2860172969077957858[276] = 0;
   out_2860172969077957858[277] = 0;
   out_2860172969077957858[278] = 0;
   out_2860172969077957858[279] = 0;
   out_2860172969077957858[280] = 0;
   out_2860172969077957858[281] = 0;
   out_2860172969077957858[282] = 0;
   out_2860172969077957858[283] = 0;
   out_2860172969077957858[284] = 0;
   out_2860172969077957858[285] = 1.0;
   out_2860172969077957858[286] = 0;
   out_2860172969077957858[287] = 0;
   out_2860172969077957858[288] = 0;
   out_2860172969077957858[289] = 0;
   out_2860172969077957858[290] = 0;
   out_2860172969077957858[291] = 0;
   out_2860172969077957858[292] = 0;
   out_2860172969077957858[293] = 0;
   out_2860172969077957858[294] = 0;
   out_2860172969077957858[295] = 0;
   out_2860172969077957858[296] = 0;
   out_2860172969077957858[297] = 0;
   out_2860172969077957858[298] = 0;
   out_2860172969077957858[299] = 0;
   out_2860172969077957858[300] = 0;
   out_2860172969077957858[301] = 0;
   out_2860172969077957858[302] = 0;
   out_2860172969077957858[303] = 0;
   out_2860172969077957858[304] = 0;
   out_2860172969077957858[305] = 0;
   out_2860172969077957858[306] = 0;
   out_2860172969077957858[307] = 1.0;
   out_2860172969077957858[308] = 0;
   out_2860172969077957858[309] = 0;
   out_2860172969077957858[310] = 0;
   out_2860172969077957858[311] = 0;
   out_2860172969077957858[312] = 0;
   out_2860172969077957858[313] = 0;
   out_2860172969077957858[314] = 0;
   out_2860172969077957858[315] = 0;
   out_2860172969077957858[316] = 0;
   out_2860172969077957858[317] = 0;
   out_2860172969077957858[318] = 0;
   out_2860172969077957858[319] = 0;
   out_2860172969077957858[320] = 0;
   out_2860172969077957858[321] = 0;
   out_2860172969077957858[322] = 0;
   out_2860172969077957858[323] = 0;
   out_2860172969077957858[324] = 0;
   out_2860172969077957858[325] = 0;
   out_2860172969077957858[326] = 0;
   out_2860172969077957858[327] = 0;
   out_2860172969077957858[328] = 0;
   out_2860172969077957858[329] = 1.0;
   out_2860172969077957858[330] = 0;
   out_2860172969077957858[331] = 0;
   out_2860172969077957858[332] = 0;
   out_2860172969077957858[333] = 0;
   out_2860172969077957858[334] = 0;
   out_2860172969077957858[335] = 0;
   out_2860172969077957858[336] = 0;
   out_2860172969077957858[337] = 0;
   out_2860172969077957858[338] = 0;
   out_2860172969077957858[339] = 0;
   out_2860172969077957858[340] = 0;
   out_2860172969077957858[341] = 0;
   out_2860172969077957858[342] = 0;
   out_2860172969077957858[343] = 0;
   out_2860172969077957858[344] = 0;
   out_2860172969077957858[345] = 0;
   out_2860172969077957858[346] = 0;
   out_2860172969077957858[347] = 0;
   out_2860172969077957858[348] = 0;
   out_2860172969077957858[349] = 0;
   out_2860172969077957858[350] = 0;
   out_2860172969077957858[351] = 1.0;
   out_2860172969077957858[352] = 0;
   out_2860172969077957858[353] = 0;
   out_2860172969077957858[354] = 0;
   out_2860172969077957858[355] = 0;
   out_2860172969077957858[356] = 0;
   out_2860172969077957858[357] = 0;
   out_2860172969077957858[358] = 0;
   out_2860172969077957858[359] = 0;
   out_2860172969077957858[360] = 0;
   out_2860172969077957858[361] = 0;
   out_2860172969077957858[362] = 0;
   out_2860172969077957858[363] = 0;
   out_2860172969077957858[364] = 0;
   out_2860172969077957858[365] = 0;
   out_2860172969077957858[366] = 0;
   out_2860172969077957858[367] = 0;
   out_2860172969077957858[368] = 0;
   out_2860172969077957858[369] = 0;
   out_2860172969077957858[370] = 0;
   out_2860172969077957858[371] = 0;
   out_2860172969077957858[372] = 0;
   out_2860172969077957858[373] = 1.0;
   out_2860172969077957858[374] = 0;
   out_2860172969077957858[375] = 0;
   out_2860172969077957858[376] = 0;
   out_2860172969077957858[377] = 0;
   out_2860172969077957858[378] = 0;
   out_2860172969077957858[379] = 0;
   out_2860172969077957858[380] = 0;
   out_2860172969077957858[381] = 0;
   out_2860172969077957858[382] = 0;
   out_2860172969077957858[383] = 0;
   out_2860172969077957858[384] = 0;
   out_2860172969077957858[385] = 0;
   out_2860172969077957858[386] = 0;
   out_2860172969077957858[387] = 0;
   out_2860172969077957858[388] = 0;
   out_2860172969077957858[389] = 0;
   out_2860172969077957858[390] = 0;
   out_2860172969077957858[391] = 0;
   out_2860172969077957858[392] = 0;
   out_2860172969077957858[393] = 0;
   out_2860172969077957858[394] = 0;
   out_2860172969077957858[395] = 1.0;
   out_2860172969077957858[396] = 0;
   out_2860172969077957858[397] = 0;
   out_2860172969077957858[398] = 0;
   out_2860172969077957858[399] = 0;
   out_2860172969077957858[400] = 0;
   out_2860172969077957858[401] = 0;
   out_2860172969077957858[402] = 0;
   out_2860172969077957858[403] = 0;
   out_2860172969077957858[404] = 0;
   out_2860172969077957858[405] = 0;
   out_2860172969077957858[406] = 0;
   out_2860172969077957858[407] = 0;
   out_2860172969077957858[408] = 0;
   out_2860172969077957858[409] = 0;
   out_2860172969077957858[410] = 0;
   out_2860172969077957858[411] = 0;
   out_2860172969077957858[412] = 0;
   out_2860172969077957858[413] = 0;
   out_2860172969077957858[414] = 0;
   out_2860172969077957858[415] = 0;
   out_2860172969077957858[416] = 0;
   out_2860172969077957858[417] = 1.0;
   out_2860172969077957858[418] = 0;
   out_2860172969077957858[419] = 0;
   out_2860172969077957858[420] = 0;
   out_2860172969077957858[421] = 0;
   out_2860172969077957858[422] = 0;
   out_2860172969077957858[423] = 0;
   out_2860172969077957858[424] = 0;
   out_2860172969077957858[425] = 0;
   out_2860172969077957858[426] = 0;
   out_2860172969077957858[427] = 0;
   out_2860172969077957858[428] = 0;
   out_2860172969077957858[429] = 0;
   out_2860172969077957858[430] = 0;
   out_2860172969077957858[431] = 0;
   out_2860172969077957858[432] = 0;
   out_2860172969077957858[433] = 0;
   out_2860172969077957858[434] = 0;
   out_2860172969077957858[435] = 0;
   out_2860172969077957858[436] = 0;
   out_2860172969077957858[437] = 0;
   out_2860172969077957858[438] = 0;
   out_2860172969077957858[439] = 1.0;
   out_2860172969077957858[440] = 0;
   out_2860172969077957858[441] = 0;
   out_2860172969077957858[442] = 0;
   out_2860172969077957858[443] = 0;
   out_2860172969077957858[444] = 0;
   out_2860172969077957858[445] = 0;
   out_2860172969077957858[446] = 0;
   out_2860172969077957858[447] = 0;
   out_2860172969077957858[448] = 0;
   out_2860172969077957858[449] = 0;
   out_2860172969077957858[450] = 0;
   out_2860172969077957858[451] = 0;
   out_2860172969077957858[452] = 0;
   out_2860172969077957858[453] = 0;
   out_2860172969077957858[454] = 0;
   out_2860172969077957858[455] = 0;
   out_2860172969077957858[456] = 0;
   out_2860172969077957858[457] = 0;
   out_2860172969077957858[458] = 0;
   out_2860172969077957858[459] = 0;
   out_2860172969077957858[460] = 0;
   out_2860172969077957858[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7509353369532479333) {
   out_7509353369532479333[0] = dt*state[7] + state[0];
   out_7509353369532479333[1] = dt*state[8] + state[1];
   out_7509353369532479333[2] = dt*state[9] + state[2];
   out_7509353369532479333[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7509353369532479333[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7509353369532479333[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7509353369532479333[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7509353369532479333[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7509353369532479333[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7509353369532479333[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7509353369532479333[10] = state[10];
   out_7509353369532479333[11] = state[11];
   out_7509353369532479333[12] = state[12];
   out_7509353369532479333[13] = state[13];
   out_7509353369532479333[14] = state[14];
   out_7509353369532479333[15] = state[15];
   out_7509353369532479333[16] = state[16];
   out_7509353369532479333[17] = state[17];
   out_7509353369532479333[18] = state[18];
   out_7509353369532479333[19] = state[19];
   out_7509353369532479333[20] = state[20];
   out_7509353369532479333[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4886194137270510489) {
   out_4886194137270510489[0] = 1;
   out_4886194137270510489[1] = 0;
   out_4886194137270510489[2] = 0;
   out_4886194137270510489[3] = 0;
   out_4886194137270510489[4] = 0;
   out_4886194137270510489[5] = 0;
   out_4886194137270510489[6] = dt;
   out_4886194137270510489[7] = 0;
   out_4886194137270510489[8] = 0;
   out_4886194137270510489[9] = 0;
   out_4886194137270510489[10] = 0;
   out_4886194137270510489[11] = 0;
   out_4886194137270510489[12] = 0;
   out_4886194137270510489[13] = 0;
   out_4886194137270510489[14] = 0;
   out_4886194137270510489[15] = 0;
   out_4886194137270510489[16] = 0;
   out_4886194137270510489[17] = 0;
   out_4886194137270510489[18] = 0;
   out_4886194137270510489[19] = 0;
   out_4886194137270510489[20] = 0;
   out_4886194137270510489[21] = 0;
   out_4886194137270510489[22] = 1;
   out_4886194137270510489[23] = 0;
   out_4886194137270510489[24] = 0;
   out_4886194137270510489[25] = 0;
   out_4886194137270510489[26] = 0;
   out_4886194137270510489[27] = 0;
   out_4886194137270510489[28] = dt;
   out_4886194137270510489[29] = 0;
   out_4886194137270510489[30] = 0;
   out_4886194137270510489[31] = 0;
   out_4886194137270510489[32] = 0;
   out_4886194137270510489[33] = 0;
   out_4886194137270510489[34] = 0;
   out_4886194137270510489[35] = 0;
   out_4886194137270510489[36] = 0;
   out_4886194137270510489[37] = 0;
   out_4886194137270510489[38] = 0;
   out_4886194137270510489[39] = 0;
   out_4886194137270510489[40] = 0;
   out_4886194137270510489[41] = 0;
   out_4886194137270510489[42] = 0;
   out_4886194137270510489[43] = 0;
   out_4886194137270510489[44] = 1;
   out_4886194137270510489[45] = 0;
   out_4886194137270510489[46] = 0;
   out_4886194137270510489[47] = 0;
   out_4886194137270510489[48] = 0;
   out_4886194137270510489[49] = 0;
   out_4886194137270510489[50] = dt;
   out_4886194137270510489[51] = 0;
   out_4886194137270510489[52] = 0;
   out_4886194137270510489[53] = 0;
   out_4886194137270510489[54] = 0;
   out_4886194137270510489[55] = 0;
   out_4886194137270510489[56] = 0;
   out_4886194137270510489[57] = 0;
   out_4886194137270510489[58] = 0;
   out_4886194137270510489[59] = 0;
   out_4886194137270510489[60] = 0;
   out_4886194137270510489[61] = 0;
   out_4886194137270510489[62] = 0;
   out_4886194137270510489[63] = 0;
   out_4886194137270510489[64] = 0;
   out_4886194137270510489[65] = 0;
   out_4886194137270510489[66] = 1;
   out_4886194137270510489[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4886194137270510489[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4886194137270510489[69] = 0;
   out_4886194137270510489[70] = 0;
   out_4886194137270510489[71] = 0;
   out_4886194137270510489[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4886194137270510489[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4886194137270510489[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4886194137270510489[75] = 0;
   out_4886194137270510489[76] = 0;
   out_4886194137270510489[77] = 0;
   out_4886194137270510489[78] = 0;
   out_4886194137270510489[79] = 0;
   out_4886194137270510489[80] = 0;
   out_4886194137270510489[81] = 0;
   out_4886194137270510489[82] = 0;
   out_4886194137270510489[83] = 0;
   out_4886194137270510489[84] = 0;
   out_4886194137270510489[85] = 0;
   out_4886194137270510489[86] = 0;
   out_4886194137270510489[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4886194137270510489[88] = 1;
   out_4886194137270510489[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4886194137270510489[90] = 0;
   out_4886194137270510489[91] = 0;
   out_4886194137270510489[92] = 0;
   out_4886194137270510489[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4886194137270510489[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4886194137270510489[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4886194137270510489[96] = 0;
   out_4886194137270510489[97] = 0;
   out_4886194137270510489[98] = 0;
   out_4886194137270510489[99] = 0;
   out_4886194137270510489[100] = 0;
   out_4886194137270510489[101] = 0;
   out_4886194137270510489[102] = 0;
   out_4886194137270510489[103] = 0;
   out_4886194137270510489[104] = 0;
   out_4886194137270510489[105] = 0;
   out_4886194137270510489[106] = 0;
   out_4886194137270510489[107] = 0;
   out_4886194137270510489[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4886194137270510489[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4886194137270510489[110] = 1;
   out_4886194137270510489[111] = 0;
   out_4886194137270510489[112] = 0;
   out_4886194137270510489[113] = 0;
   out_4886194137270510489[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4886194137270510489[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4886194137270510489[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4886194137270510489[117] = 0;
   out_4886194137270510489[118] = 0;
   out_4886194137270510489[119] = 0;
   out_4886194137270510489[120] = 0;
   out_4886194137270510489[121] = 0;
   out_4886194137270510489[122] = 0;
   out_4886194137270510489[123] = 0;
   out_4886194137270510489[124] = 0;
   out_4886194137270510489[125] = 0;
   out_4886194137270510489[126] = 0;
   out_4886194137270510489[127] = 0;
   out_4886194137270510489[128] = 0;
   out_4886194137270510489[129] = 0;
   out_4886194137270510489[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4886194137270510489[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4886194137270510489[132] = 1;
   out_4886194137270510489[133] = 0;
   out_4886194137270510489[134] = 0;
   out_4886194137270510489[135] = 0;
   out_4886194137270510489[136] = 0;
   out_4886194137270510489[137] = 0;
   out_4886194137270510489[138] = 0;
   out_4886194137270510489[139] = 0;
   out_4886194137270510489[140] = 0;
   out_4886194137270510489[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4886194137270510489[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4886194137270510489[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4886194137270510489[144] = 0;
   out_4886194137270510489[145] = 0;
   out_4886194137270510489[146] = 0;
   out_4886194137270510489[147] = 0;
   out_4886194137270510489[148] = 0;
   out_4886194137270510489[149] = 0;
   out_4886194137270510489[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4886194137270510489[151] = 0;
   out_4886194137270510489[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4886194137270510489[153] = 0;
   out_4886194137270510489[154] = 1;
   out_4886194137270510489[155] = 0;
   out_4886194137270510489[156] = 0;
   out_4886194137270510489[157] = 0;
   out_4886194137270510489[158] = 0;
   out_4886194137270510489[159] = 0;
   out_4886194137270510489[160] = 0;
   out_4886194137270510489[161] = 0;
   out_4886194137270510489[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4886194137270510489[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4886194137270510489[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4886194137270510489[165] = 0;
   out_4886194137270510489[166] = 0;
   out_4886194137270510489[167] = 0;
   out_4886194137270510489[168] = 0;
   out_4886194137270510489[169] = 0;
   out_4886194137270510489[170] = 0;
   out_4886194137270510489[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4886194137270510489[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4886194137270510489[173] = 0;
   out_4886194137270510489[174] = 0;
   out_4886194137270510489[175] = 0;
   out_4886194137270510489[176] = 1;
   out_4886194137270510489[177] = 0;
   out_4886194137270510489[178] = 0;
   out_4886194137270510489[179] = 0;
   out_4886194137270510489[180] = 0;
   out_4886194137270510489[181] = 0;
   out_4886194137270510489[182] = 0;
   out_4886194137270510489[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4886194137270510489[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4886194137270510489[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4886194137270510489[186] = 0;
   out_4886194137270510489[187] = 0;
   out_4886194137270510489[188] = 0;
   out_4886194137270510489[189] = 0;
   out_4886194137270510489[190] = 0;
   out_4886194137270510489[191] = 0;
   out_4886194137270510489[192] = 0;
   out_4886194137270510489[193] = 0;
   out_4886194137270510489[194] = 0;
   out_4886194137270510489[195] = 0;
   out_4886194137270510489[196] = 0;
   out_4886194137270510489[197] = 0;
   out_4886194137270510489[198] = 1;
   out_4886194137270510489[199] = 0;
   out_4886194137270510489[200] = 0;
   out_4886194137270510489[201] = 0;
   out_4886194137270510489[202] = 0;
   out_4886194137270510489[203] = 0;
   out_4886194137270510489[204] = 0;
   out_4886194137270510489[205] = 0;
   out_4886194137270510489[206] = 0;
   out_4886194137270510489[207] = 0;
   out_4886194137270510489[208] = 0;
   out_4886194137270510489[209] = 0;
   out_4886194137270510489[210] = 0;
   out_4886194137270510489[211] = 0;
   out_4886194137270510489[212] = 0;
   out_4886194137270510489[213] = 0;
   out_4886194137270510489[214] = 0;
   out_4886194137270510489[215] = 0;
   out_4886194137270510489[216] = 0;
   out_4886194137270510489[217] = 0;
   out_4886194137270510489[218] = 0;
   out_4886194137270510489[219] = 0;
   out_4886194137270510489[220] = 1;
   out_4886194137270510489[221] = 0;
   out_4886194137270510489[222] = 0;
   out_4886194137270510489[223] = 0;
   out_4886194137270510489[224] = 0;
   out_4886194137270510489[225] = 0;
   out_4886194137270510489[226] = 0;
   out_4886194137270510489[227] = 0;
   out_4886194137270510489[228] = 0;
   out_4886194137270510489[229] = 0;
   out_4886194137270510489[230] = 0;
   out_4886194137270510489[231] = 0;
   out_4886194137270510489[232] = 0;
   out_4886194137270510489[233] = 0;
   out_4886194137270510489[234] = 0;
   out_4886194137270510489[235] = 0;
   out_4886194137270510489[236] = 0;
   out_4886194137270510489[237] = 0;
   out_4886194137270510489[238] = 0;
   out_4886194137270510489[239] = 0;
   out_4886194137270510489[240] = 0;
   out_4886194137270510489[241] = 0;
   out_4886194137270510489[242] = 1;
   out_4886194137270510489[243] = 0;
   out_4886194137270510489[244] = 0;
   out_4886194137270510489[245] = 0;
   out_4886194137270510489[246] = 0;
   out_4886194137270510489[247] = 0;
   out_4886194137270510489[248] = 0;
   out_4886194137270510489[249] = 0;
   out_4886194137270510489[250] = 0;
   out_4886194137270510489[251] = 0;
   out_4886194137270510489[252] = 0;
   out_4886194137270510489[253] = 0;
   out_4886194137270510489[254] = 0;
   out_4886194137270510489[255] = 0;
   out_4886194137270510489[256] = 0;
   out_4886194137270510489[257] = 0;
   out_4886194137270510489[258] = 0;
   out_4886194137270510489[259] = 0;
   out_4886194137270510489[260] = 0;
   out_4886194137270510489[261] = 0;
   out_4886194137270510489[262] = 0;
   out_4886194137270510489[263] = 0;
   out_4886194137270510489[264] = 1;
   out_4886194137270510489[265] = 0;
   out_4886194137270510489[266] = 0;
   out_4886194137270510489[267] = 0;
   out_4886194137270510489[268] = 0;
   out_4886194137270510489[269] = 0;
   out_4886194137270510489[270] = 0;
   out_4886194137270510489[271] = 0;
   out_4886194137270510489[272] = 0;
   out_4886194137270510489[273] = 0;
   out_4886194137270510489[274] = 0;
   out_4886194137270510489[275] = 0;
   out_4886194137270510489[276] = 0;
   out_4886194137270510489[277] = 0;
   out_4886194137270510489[278] = 0;
   out_4886194137270510489[279] = 0;
   out_4886194137270510489[280] = 0;
   out_4886194137270510489[281] = 0;
   out_4886194137270510489[282] = 0;
   out_4886194137270510489[283] = 0;
   out_4886194137270510489[284] = 0;
   out_4886194137270510489[285] = 0;
   out_4886194137270510489[286] = 1;
   out_4886194137270510489[287] = 0;
   out_4886194137270510489[288] = 0;
   out_4886194137270510489[289] = 0;
   out_4886194137270510489[290] = 0;
   out_4886194137270510489[291] = 0;
   out_4886194137270510489[292] = 0;
   out_4886194137270510489[293] = 0;
   out_4886194137270510489[294] = 0;
   out_4886194137270510489[295] = 0;
   out_4886194137270510489[296] = 0;
   out_4886194137270510489[297] = 0;
   out_4886194137270510489[298] = 0;
   out_4886194137270510489[299] = 0;
   out_4886194137270510489[300] = 0;
   out_4886194137270510489[301] = 0;
   out_4886194137270510489[302] = 0;
   out_4886194137270510489[303] = 0;
   out_4886194137270510489[304] = 0;
   out_4886194137270510489[305] = 0;
   out_4886194137270510489[306] = 0;
   out_4886194137270510489[307] = 0;
   out_4886194137270510489[308] = 1;
   out_4886194137270510489[309] = 0;
   out_4886194137270510489[310] = 0;
   out_4886194137270510489[311] = 0;
   out_4886194137270510489[312] = 0;
   out_4886194137270510489[313] = 0;
   out_4886194137270510489[314] = 0;
   out_4886194137270510489[315] = 0;
   out_4886194137270510489[316] = 0;
   out_4886194137270510489[317] = 0;
   out_4886194137270510489[318] = 0;
   out_4886194137270510489[319] = 0;
   out_4886194137270510489[320] = 0;
   out_4886194137270510489[321] = 0;
   out_4886194137270510489[322] = 0;
   out_4886194137270510489[323] = 0;
   out_4886194137270510489[324] = 0;
   out_4886194137270510489[325] = 0;
   out_4886194137270510489[326] = 0;
   out_4886194137270510489[327] = 0;
   out_4886194137270510489[328] = 0;
   out_4886194137270510489[329] = 0;
   out_4886194137270510489[330] = 1;
   out_4886194137270510489[331] = 0;
   out_4886194137270510489[332] = 0;
   out_4886194137270510489[333] = 0;
   out_4886194137270510489[334] = 0;
   out_4886194137270510489[335] = 0;
   out_4886194137270510489[336] = 0;
   out_4886194137270510489[337] = 0;
   out_4886194137270510489[338] = 0;
   out_4886194137270510489[339] = 0;
   out_4886194137270510489[340] = 0;
   out_4886194137270510489[341] = 0;
   out_4886194137270510489[342] = 0;
   out_4886194137270510489[343] = 0;
   out_4886194137270510489[344] = 0;
   out_4886194137270510489[345] = 0;
   out_4886194137270510489[346] = 0;
   out_4886194137270510489[347] = 0;
   out_4886194137270510489[348] = 0;
   out_4886194137270510489[349] = 0;
   out_4886194137270510489[350] = 0;
   out_4886194137270510489[351] = 0;
   out_4886194137270510489[352] = 1;
   out_4886194137270510489[353] = 0;
   out_4886194137270510489[354] = 0;
   out_4886194137270510489[355] = 0;
   out_4886194137270510489[356] = 0;
   out_4886194137270510489[357] = 0;
   out_4886194137270510489[358] = 0;
   out_4886194137270510489[359] = 0;
   out_4886194137270510489[360] = 0;
   out_4886194137270510489[361] = 0;
   out_4886194137270510489[362] = 0;
   out_4886194137270510489[363] = 0;
   out_4886194137270510489[364] = 0;
   out_4886194137270510489[365] = 0;
   out_4886194137270510489[366] = 0;
   out_4886194137270510489[367] = 0;
   out_4886194137270510489[368] = 0;
   out_4886194137270510489[369] = 0;
   out_4886194137270510489[370] = 0;
   out_4886194137270510489[371] = 0;
   out_4886194137270510489[372] = 0;
   out_4886194137270510489[373] = 0;
   out_4886194137270510489[374] = 1;
   out_4886194137270510489[375] = 0;
   out_4886194137270510489[376] = 0;
   out_4886194137270510489[377] = 0;
   out_4886194137270510489[378] = 0;
   out_4886194137270510489[379] = 0;
   out_4886194137270510489[380] = 0;
   out_4886194137270510489[381] = 0;
   out_4886194137270510489[382] = 0;
   out_4886194137270510489[383] = 0;
   out_4886194137270510489[384] = 0;
   out_4886194137270510489[385] = 0;
   out_4886194137270510489[386] = 0;
   out_4886194137270510489[387] = 0;
   out_4886194137270510489[388] = 0;
   out_4886194137270510489[389] = 0;
   out_4886194137270510489[390] = 0;
   out_4886194137270510489[391] = 0;
   out_4886194137270510489[392] = 0;
   out_4886194137270510489[393] = 0;
   out_4886194137270510489[394] = 0;
   out_4886194137270510489[395] = 0;
   out_4886194137270510489[396] = 1;
   out_4886194137270510489[397] = 0;
   out_4886194137270510489[398] = 0;
   out_4886194137270510489[399] = 0;
   out_4886194137270510489[400] = 0;
   out_4886194137270510489[401] = 0;
   out_4886194137270510489[402] = 0;
   out_4886194137270510489[403] = 0;
   out_4886194137270510489[404] = 0;
   out_4886194137270510489[405] = 0;
   out_4886194137270510489[406] = 0;
   out_4886194137270510489[407] = 0;
   out_4886194137270510489[408] = 0;
   out_4886194137270510489[409] = 0;
   out_4886194137270510489[410] = 0;
   out_4886194137270510489[411] = 0;
   out_4886194137270510489[412] = 0;
   out_4886194137270510489[413] = 0;
   out_4886194137270510489[414] = 0;
   out_4886194137270510489[415] = 0;
   out_4886194137270510489[416] = 0;
   out_4886194137270510489[417] = 0;
   out_4886194137270510489[418] = 1;
   out_4886194137270510489[419] = 0;
   out_4886194137270510489[420] = 0;
   out_4886194137270510489[421] = 0;
   out_4886194137270510489[422] = 0;
   out_4886194137270510489[423] = 0;
   out_4886194137270510489[424] = 0;
   out_4886194137270510489[425] = 0;
   out_4886194137270510489[426] = 0;
   out_4886194137270510489[427] = 0;
   out_4886194137270510489[428] = 0;
   out_4886194137270510489[429] = 0;
   out_4886194137270510489[430] = 0;
   out_4886194137270510489[431] = 0;
   out_4886194137270510489[432] = 0;
   out_4886194137270510489[433] = 0;
   out_4886194137270510489[434] = 0;
   out_4886194137270510489[435] = 0;
   out_4886194137270510489[436] = 0;
   out_4886194137270510489[437] = 0;
   out_4886194137270510489[438] = 0;
   out_4886194137270510489[439] = 0;
   out_4886194137270510489[440] = 1;
}
void h_4(double *state, double *unused, double *out_4637897841970702621) {
   out_4637897841970702621[0] = state[10] + state[13];
   out_4637897841970702621[1] = state[11] + state[14];
   out_4637897841970702621[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5805323984074307015) {
   out_5805323984074307015[0] = 0;
   out_5805323984074307015[1] = 0;
   out_5805323984074307015[2] = 0;
   out_5805323984074307015[3] = 0;
   out_5805323984074307015[4] = 0;
   out_5805323984074307015[5] = 0;
   out_5805323984074307015[6] = 0;
   out_5805323984074307015[7] = 0;
   out_5805323984074307015[8] = 0;
   out_5805323984074307015[9] = 0;
   out_5805323984074307015[10] = 1;
   out_5805323984074307015[11] = 0;
   out_5805323984074307015[12] = 0;
   out_5805323984074307015[13] = 1;
   out_5805323984074307015[14] = 0;
   out_5805323984074307015[15] = 0;
   out_5805323984074307015[16] = 0;
   out_5805323984074307015[17] = 0;
   out_5805323984074307015[18] = 0;
   out_5805323984074307015[19] = 0;
   out_5805323984074307015[20] = 0;
   out_5805323984074307015[21] = 0;
   out_5805323984074307015[22] = 0;
   out_5805323984074307015[23] = 0;
   out_5805323984074307015[24] = 0;
   out_5805323984074307015[25] = 0;
   out_5805323984074307015[26] = 0;
   out_5805323984074307015[27] = 0;
   out_5805323984074307015[28] = 0;
   out_5805323984074307015[29] = 0;
   out_5805323984074307015[30] = 0;
   out_5805323984074307015[31] = 0;
   out_5805323984074307015[32] = 0;
   out_5805323984074307015[33] = 1;
   out_5805323984074307015[34] = 0;
   out_5805323984074307015[35] = 0;
   out_5805323984074307015[36] = 1;
   out_5805323984074307015[37] = 0;
   out_5805323984074307015[38] = 0;
   out_5805323984074307015[39] = 0;
   out_5805323984074307015[40] = 0;
   out_5805323984074307015[41] = 0;
   out_5805323984074307015[42] = 0;
   out_5805323984074307015[43] = 0;
   out_5805323984074307015[44] = 0;
   out_5805323984074307015[45] = 0;
   out_5805323984074307015[46] = 0;
   out_5805323984074307015[47] = 0;
   out_5805323984074307015[48] = 0;
   out_5805323984074307015[49] = 0;
   out_5805323984074307015[50] = 0;
   out_5805323984074307015[51] = 0;
   out_5805323984074307015[52] = 0;
   out_5805323984074307015[53] = 0;
   out_5805323984074307015[54] = 0;
   out_5805323984074307015[55] = 0;
   out_5805323984074307015[56] = 1;
   out_5805323984074307015[57] = 0;
   out_5805323984074307015[58] = 0;
   out_5805323984074307015[59] = 1;
   out_5805323984074307015[60] = 0;
   out_5805323984074307015[61] = 0;
   out_5805323984074307015[62] = 0;
   out_5805323984074307015[63] = 0;
   out_5805323984074307015[64] = 0;
   out_5805323984074307015[65] = 0;
}
void h_9(double *state, double *unused, double *out_8591118695218469571) {
   out_8591118695218469571[0] = state[10];
   out_8591118695218469571[1] = state[11];
   out_8591118695218469571[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5354201154370797131) {
   out_5354201154370797131[0] = 0;
   out_5354201154370797131[1] = 0;
   out_5354201154370797131[2] = 0;
   out_5354201154370797131[3] = 0;
   out_5354201154370797131[4] = 0;
   out_5354201154370797131[5] = 0;
   out_5354201154370797131[6] = 0;
   out_5354201154370797131[7] = 0;
   out_5354201154370797131[8] = 0;
   out_5354201154370797131[9] = 0;
   out_5354201154370797131[10] = 1;
   out_5354201154370797131[11] = 0;
   out_5354201154370797131[12] = 0;
   out_5354201154370797131[13] = 0;
   out_5354201154370797131[14] = 0;
   out_5354201154370797131[15] = 0;
   out_5354201154370797131[16] = 0;
   out_5354201154370797131[17] = 0;
   out_5354201154370797131[18] = 0;
   out_5354201154370797131[19] = 0;
   out_5354201154370797131[20] = 0;
   out_5354201154370797131[21] = 0;
   out_5354201154370797131[22] = 0;
   out_5354201154370797131[23] = 0;
   out_5354201154370797131[24] = 0;
   out_5354201154370797131[25] = 0;
   out_5354201154370797131[26] = 0;
   out_5354201154370797131[27] = 0;
   out_5354201154370797131[28] = 0;
   out_5354201154370797131[29] = 0;
   out_5354201154370797131[30] = 0;
   out_5354201154370797131[31] = 0;
   out_5354201154370797131[32] = 0;
   out_5354201154370797131[33] = 1;
   out_5354201154370797131[34] = 0;
   out_5354201154370797131[35] = 0;
   out_5354201154370797131[36] = 0;
   out_5354201154370797131[37] = 0;
   out_5354201154370797131[38] = 0;
   out_5354201154370797131[39] = 0;
   out_5354201154370797131[40] = 0;
   out_5354201154370797131[41] = 0;
   out_5354201154370797131[42] = 0;
   out_5354201154370797131[43] = 0;
   out_5354201154370797131[44] = 0;
   out_5354201154370797131[45] = 0;
   out_5354201154370797131[46] = 0;
   out_5354201154370797131[47] = 0;
   out_5354201154370797131[48] = 0;
   out_5354201154370797131[49] = 0;
   out_5354201154370797131[50] = 0;
   out_5354201154370797131[51] = 0;
   out_5354201154370797131[52] = 0;
   out_5354201154370797131[53] = 0;
   out_5354201154370797131[54] = 0;
   out_5354201154370797131[55] = 0;
   out_5354201154370797131[56] = 1;
   out_5354201154370797131[57] = 0;
   out_5354201154370797131[58] = 0;
   out_5354201154370797131[59] = 0;
   out_5354201154370797131[60] = 0;
   out_5354201154370797131[61] = 0;
   out_5354201154370797131[62] = 0;
   out_5354201154370797131[63] = 0;
   out_5354201154370797131[64] = 0;
   out_5354201154370797131[65] = 0;
}
void h_10(double *state, double *unused, double *out_7242359529701963629) {
   out_7242359529701963629[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7242359529701963629[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7242359529701963629[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4137885373585509426) {
   out_4137885373585509426[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4137885373585509426[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4137885373585509426[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4137885373585509426[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4137885373585509426[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4137885373585509426[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4137885373585509426[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4137885373585509426[7] = 0;
   out_4137885373585509426[8] = 0;
   out_4137885373585509426[9] = 0;
   out_4137885373585509426[10] = 0;
   out_4137885373585509426[11] = 0;
   out_4137885373585509426[12] = 0;
   out_4137885373585509426[13] = 0;
   out_4137885373585509426[14] = 0;
   out_4137885373585509426[15] = 0;
   out_4137885373585509426[16] = 1;
   out_4137885373585509426[17] = 0;
   out_4137885373585509426[18] = 0;
   out_4137885373585509426[19] = 1;
   out_4137885373585509426[20] = 0;
   out_4137885373585509426[21] = 0;
   out_4137885373585509426[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4137885373585509426[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4137885373585509426[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4137885373585509426[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4137885373585509426[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4137885373585509426[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4137885373585509426[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4137885373585509426[29] = 0;
   out_4137885373585509426[30] = 0;
   out_4137885373585509426[31] = 0;
   out_4137885373585509426[32] = 0;
   out_4137885373585509426[33] = 0;
   out_4137885373585509426[34] = 0;
   out_4137885373585509426[35] = 0;
   out_4137885373585509426[36] = 0;
   out_4137885373585509426[37] = 0;
   out_4137885373585509426[38] = 0;
   out_4137885373585509426[39] = 1;
   out_4137885373585509426[40] = 0;
   out_4137885373585509426[41] = 0;
   out_4137885373585509426[42] = 1;
   out_4137885373585509426[43] = 0;
   out_4137885373585509426[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4137885373585509426[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4137885373585509426[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4137885373585509426[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4137885373585509426[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4137885373585509426[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4137885373585509426[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4137885373585509426[51] = 0;
   out_4137885373585509426[52] = 0;
   out_4137885373585509426[53] = 0;
   out_4137885373585509426[54] = 0;
   out_4137885373585509426[55] = 0;
   out_4137885373585509426[56] = 0;
   out_4137885373585509426[57] = 0;
   out_4137885373585509426[58] = 0;
   out_4137885373585509426[59] = 0;
   out_4137885373585509426[60] = 0;
   out_4137885373585509426[61] = 0;
   out_4137885373585509426[62] = 1;
   out_4137885373585509426[63] = 0;
   out_4137885373585509426[64] = 0;
   out_4137885373585509426[65] = 1;
}
void h_12(double *state, double *unused, double *out_8526913763654168672) {
   out_8526913763654168672[0] = state[0];
   out_8526913763654168672[1] = state[1];
   out_8526913763654168672[2] = state[2];
}
void H_12(double *state, double *unused, double *out_575934392968425981) {
   out_575934392968425981[0] = 1;
   out_575934392968425981[1] = 0;
   out_575934392968425981[2] = 0;
   out_575934392968425981[3] = 0;
   out_575934392968425981[4] = 0;
   out_575934392968425981[5] = 0;
   out_575934392968425981[6] = 0;
   out_575934392968425981[7] = 0;
   out_575934392968425981[8] = 0;
   out_575934392968425981[9] = 0;
   out_575934392968425981[10] = 0;
   out_575934392968425981[11] = 0;
   out_575934392968425981[12] = 0;
   out_575934392968425981[13] = 0;
   out_575934392968425981[14] = 0;
   out_575934392968425981[15] = 0;
   out_575934392968425981[16] = 0;
   out_575934392968425981[17] = 0;
   out_575934392968425981[18] = 0;
   out_575934392968425981[19] = 0;
   out_575934392968425981[20] = 0;
   out_575934392968425981[21] = 0;
   out_575934392968425981[22] = 0;
   out_575934392968425981[23] = 1;
   out_575934392968425981[24] = 0;
   out_575934392968425981[25] = 0;
   out_575934392968425981[26] = 0;
   out_575934392968425981[27] = 0;
   out_575934392968425981[28] = 0;
   out_575934392968425981[29] = 0;
   out_575934392968425981[30] = 0;
   out_575934392968425981[31] = 0;
   out_575934392968425981[32] = 0;
   out_575934392968425981[33] = 0;
   out_575934392968425981[34] = 0;
   out_575934392968425981[35] = 0;
   out_575934392968425981[36] = 0;
   out_575934392968425981[37] = 0;
   out_575934392968425981[38] = 0;
   out_575934392968425981[39] = 0;
   out_575934392968425981[40] = 0;
   out_575934392968425981[41] = 0;
   out_575934392968425981[42] = 0;
   out_575934392968425981[43] = 0;
   out_575934392968425981[44] = 0;
   out_575934392968425981[45] = 0;
   out_575934392968425981[46] = 1;
   out_575934392968425981[47] = 0;
   out_575934392968425981[48] = 0;
   out_575934392968425981[49] = 0;
   out_575934392968425981[50] = 0;
   out_575934392968425981[51] = 0;
   out_575934392968425981[52] = 0;
   out_575934392968425981[53] = 0;
   out_575934392968425981[54] = 0;
   out_575934392968425981[55] = 0;
   out_575934392968425981[56] = 0;
   out_575934392968425981[57] = 0;
   out_575934392968425981[58] = 0;
   out_575934392968425981[59] = 0;
   out_575934392968425981[60] = 0;
   out_575934392968425981[61] = 0;
   out_575934392968425981[62] = 0;
   out_575934392968425981[63] = 0;
   out_575934392968425981[64] = 0;
   out_575934392968425981[65] = 0;
}
void h_31(double *state, double *unused, double *out_5203034508709014668) {
   out_5203034508709014668[0] = state[7];
   out_5203034508709014668[1] = state[8];
   out_5203034508709014668[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2228728743627780400) {
   out_2228728743627780400[0] = 0;
   out_2228728743627780400[1] = 0;
   out_2228728743627780400[2] = 0;
   out_2228728743627780400[3] = 0;
   out_2228728743627780400[4] = 0;
   out_2228728743627780400[5] = 0;
   out_2228728743627780400[6] = 0;
   out_2228728743627780400[7] = 1;
   out_2228728743627780400[8] = 0;
   out_2228728743627780400[9] = 0;
   out_2228728743627780400[10] = 0;
   out_2228728743627780400[11] = 0;
   out_2228728743627780400[12] = 0;
   out_2228728743627780400[13] = 0;
   out_2228728743627780400[14] = 0;
   out_2228728743627780400[15] = 0;
   out_2228728743627780400[16] = 0;
   out_2228728743627780400[17] = 0;
   out_2228728743627780400[18] = 0;
   out_2228728743627780400[19] = 0;
   out_2228728743627780400[20] = 0;
   out_2228728743627780400[21] = 0;
   out_2228728743627780400[22] = 0;
   out_2228728743627780400[23] = 0;
   out_2228728743627780400[24] = 0;
   out_2228728743627780400[25] = 0;
   out_2228728743627780400[26] = 0;
   out_2228728743627780400[27] = 0;
   out_2228728743627780400[28] = 0;
   out_2228728743627780400[29] = 0;
   out_2228728743627780400[30] = 1;
   out_2228728743627780400[31] = 0;
   out_2228728743627780400[32] = 0;
   out_2228728743627780400[33] = 0;
   out_2228728743627780400[34] = 0;
   out_2228728743627780400[35] = 0;
   out_2228728743627780400[36] = 0;
   out_2228728743627780400[37] = 0;
   out_2228728743627780400[38] = 0;
   out_2228728743627780400[39] = 0;
   out_2228728743627780400[40] = 0;
   out_2228728743627780400[41] = 0;
   out_2228728743627780400[42] = 0;
   out_2228728743627780400[43] = 0;
   out_2228728743627780400[44] = 0;
   out_2228728743627780400[45] = 0;
   out_2228728743627780400[46] = 0;
   out_2228728743627780400[47] = 0;
   out_2228728743627780400[48] = 0;
   out_2228728743627780400[49] = 0;
   out_2228728743627780400[50] = 0;
   out_2228728743627780400[51] = 0;
   out_2228728743627780400[52] = 0;
   out_2228728743627780400[53] = 1;
   out_2228728743627780400[54] = 0;
   out_2228728743627780400[55] = 0;
   out_2228728743627780400[56] = 0;
   out_2228728743627780400[57] = 0;
   out_2228728743627780400[58] = 0;
   out_2228728743627780400[59] = 0;
   out_2228728743627780400[60] = 0;
   out_2228728743627780400[61] = 0;
   out_2228728743627780400[62] = 0;
   out_2228728743627780400[63] = 0;
   out_2228728743627780400[64] = 0;
   out_2228728743627780400[65] = 0;
}
void h_32(double *state, double *unused, double *out_6866430390157578802) {
   out_6866430390157578802[0] = state[3];
   out_6866430390157578802[1] = state[4];
   out_6866430390157578802[2] = state[5];
   out_6866430390157578802[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6285504618598459895) {
   out_6285504618598459895[0] = 0;
   out_6285504618598459895[1] = 0;
   out_6285504618598459895[2] = 0;
   out_6285504618598459895[3] = 1;
   out_6285504618598459895[4] = 0;
   out_6285504618598459895[5] = 0;
   out_6285504618598459895[6] = 0;
   out_6285504618598459895[7] = 0;
   out_6285504618598459895[8] = 0;
   out_6285504618598459895[9] = 0;
   out_6285504618598459895[10] = 0;
   out_6285504618598459895[11] = 0;
   out_6285504618598459895[12] = 0;
   out_6285504618598459895[13] = 0;
   out_6285504618598459895[14] = 0;
   out_6285504618598459895[15] = 0;
   out_6285504618598459895[16] = 0;
   out_6285504618598459895[17] = 0;
   out_6285504618598459895[18] = 0;
   out_6285504618598459895[19] = 0;
   out_6285504618598459895[20] = 0;
   out_6285504618598459895[21] = 0;
   out_6285504618598459895[22] = 0;
   out_6285504618598459895[23] = 0;
   out_6285504618598459895[24] = 0;
   out_6285504618598459895[25] = 0;
   out_6285504618598459895[26] = 1;
   out_6285504618598459895[27] = 0;
   out_6285504618598459895[28] = 0;
   out_6285504618598459895[29] = 0;
   out_6285504618598459895[30] = 0;
   out_6285504618598459895[31] = 0;
   out_6285504618598459895[32] = 0;
   out_6285504618598459895[33] = 0;
   out_6285504618598459895[34] = 0;
   out_6285504618598459895[35] = 0;
   out_6285504618598459895[36] = 0;
   out_6285504618598459895[37] = 0;
   out_6285504618598459895[38] = 0;
   out_6285504618598459895[39] = 0;
   out_6285504618598459895[40] = 0;
   out_6285504618598459895[41] = 0;
   out_6285504618598459895[42] = 0;
   out_6285504618598459895[43] = 0;
   out_6285504618598459895[44] = 0;
   out_6285504618598459895[45] = 0;
   out_6285504618598459895[46] = 0;
   out_6285504618598459895[47] = 0;
   out_6285504618598459895[48] = 0;
   out_6285504618598459895[49] = 1;
   out_6285504618598459895[50] = 0;
   out_6285504618598459895[51] = 0;
   out_6285504618598459895[52] = 0;
   out_6285504618598459895[53] = 0;
   out_6285504618598459895[54] = 0;
   out_6285504618598459895[55] = 0;
   out_6285504618598459895[56] = 0;
   out_6285504618598459895[57] = 0;
   out_6285504618598459895[58] = 0;
   out_6285504618598459895[59] = 0;
   out_6285504618598459895[60] = 0;
   out_6285504618598459895[61] = 0;
   out_6285504618598459895[62] = 0;
   out_6285504618598459895[63] = 0;
   out_6285504618598459895[64] = 0;
   out_6285504618598459895[65] = 0;
   out_6285504618598459895[66] = 0;
   out_6285504618598459895[67] = 0;
   out_6285504618598459895[68] = 0;
   out_6285504618598459895[69] = 0;
   out_6285504618598459895[70] = 0;
   out_6285504618598459895[71] = 0;
   out_6285504618598459895[72] = 1;
   out_6285504618598459895[73] = 0;
   out_6285504618598459895[74] = 0;
   out_6285504618598459895[75] = 0;
   out_6285504618598459895[76] = 0;
   out_6285504618598459895[77] = 0;
   out_6285504618598459895[78] = 0;
   out_6285504618598459895[79] = 0;
   out_6285504618598459895[80] = 0;
   out_6285504618598459895[81] = 0;
   out_6285504618598459895[82] = 0;
   out_6285504618598459895[83] = 0;
   out_6285504618598459895[84] = 0;
   out_6285504618598459895[85] = 0;
   out_6285504618598459895[86] = 0;
   out_6285504618598459895[87] = 0;
}
void h_13(double *state, double *unused, double *out_4190634259273921891) {
   out_4190634259273921891[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4190634259273921891[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4190634259273921891[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5258487694199186349) {
   out_5258487694199186349[0] = 0;
   out_5258487694199186349[1] = 0;
   out_5258487694199186349[2] = 0;
   out_5258487694199186349[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5258487694199186349[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5258487694199186349[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5258487694199186349[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5258487694199186349[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5258487694199186349[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5258487694199186349[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5258487694199186349[10] = 0;
   out_5258487694199186349[11] = 0;
   out_5258487694199186349[12] = 0;
   out_5258487694199186349[13] = 0;
   out_5258487694199186349[14] = 0;
   out_5258487694199186349[15] = 0;
   out_5258487694199186349[16] = 0;
   out_5258487694199186349[17] = 0;
   out_5258487694199186349[18] = 0;
   out_5258487694199186349[19] = 0;
   out_5258487694199186349[20] = 0;
   out_5258487694199186349[21] = 0;
   out_5258487694199186349[22] = 0;
   out_5258487694199186349[23] = 0;
   out_5258487694199186349[24] = 0;
   out_5258487694199186349[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5258487694199186349[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5258487694199186349[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5258487694199186349[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5258487694199186349[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5258487694199186349[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5258487694199186349[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5258487694199186349[32] = 0;
   out_5258487694199186349[33] = 0;
   out_5258487694199186349[34] = 0;
   out_5258487694199186349[35] = 0;
   out_5258487694199186349[36] = 0;
   out_5258487694199186349[37] = 0;
   out_5258487694199186349[38] = 0;
   out_5258487694199186349[39] = 0;
   out_5258487694199186349[40] = 0;
   out_5258487694199186349[41] = 0;
   out_5258487694199186349[42] = 0;
   out_5258487694199186349[43] = 0;
   out_5258487694199186349[44] = 0;
   out_5258487694199186349[45] = 0;
   out_5258487694199186349[46] = 0;
   out_5258487694199186349[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5258487694199186349[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5258487694199186349[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5258487694199186349[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5258487694199186349[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5258487694199186349[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5258487694199186349[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5258487694199186349[54] = 0;
   out_5258487694199186349[55] = 0;
   out_5258487694199186349[56] = 0;
   out_5258487694199186349[57] = 0;
   out_5258487694199186349[58] = 0;
   out_5258487694199186349[59] = 0;
   out_5258487694199186349[60] = 0;
   out_5258487694199186349[61] = 0;
   out_5258487694199186349[62] = 0;
   out_5258487694199186349[63] = 0;
   out_5258487694199186349[64] = 0;
   out_5258487694199186349[65] = 0;
}
void h_14(double *state, double *unused, double *out_8591118695218469571) {
   out_8591118695218469571[0] = state[10];
   out_8591118695218469571[1] = state[11];
   out_8591118695218469571[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5354201154370797131) {
   out_5354201154370797131[0] = 0;
   out_5354201154370797131[1] = 0;
   out_5354201154370797131[2] = 0;
   out_5354201154370797131[3] = 0;
   out_5354201154370797131[4] = 0;
   out_5354201154370797131[5] = 0;
   out_5354201154370797131[6] = 0;
   out_5354201154370797131[7] = 0;
   out_5354201154370797131[8] = 0;
   out_5354201154370797131[9] = 0;
   out_5354201154370797131[10] = 1;
   out_5354201154370797131[11] = 0;
   out_5354201154370797131[12] = 0;
   out_5354201154370797131[13] = 0;
   out_5354201154370797131[14] = 0;
   out_5354201154370797131[15] = 0;
   out_5354201154370797131[16] = 0;
   out_5354201154370797131[17] = 0;
   out_5354201154370797131[18] = 0;
   out_5354201154370797131[19] = 0;
   out_5354201154370797131[20] = 0;
   out_5354201154370797131[21] = 0;
   out_5354201154370797131[22] = 0;
   out_5354201154370797131[23] = 0;
   out_5354201154370797131[24] = 0;
   out_5354201154370797131[25] = 0;
   out_5354201154370797131[26] = 0;
   out_5354201154370797131[27] = 0;
   out_5354201154370797131[28] = 0;
   out_5354201154370797131[29] = 0;
   out_5354201154370797131[30] = 0;
   out_5354201154370797131[31] = 0;
   out_5354201154370797131[32] = 0;
   out_5354201154370797131[33] = 1;
   out_5354201154370797131[34] = 0;
   out_5354201154370797131[35] = 0;
   out_5354201154370797131[36] = 0;
   out_5354201154370797131[37] = 0;
   out_5354201154370797131[38] = 0;
   out_5354201154370797131[39] = 0;
   out_5354201154370797131[40] = 0;
   out_5354201154370797131[41] = 0;
   out_5354201154370797131[42] = 0;
   out_5354201154370797131[43] = 0;
   out_5354201154370797131[44] = 0;
   out_5354201154370797131[45] = 0;
   out_5354201154370797131[46] = 0;
   out_5354201154370797131[47] = 0;
   out_5354201154370797131[48] = 0;
   out_5354201154370797131[49] = 0;
   out_5354201154370797131[50] = 0;
   out_5354201154370797131[51] = 0;
   out_5354201154370797131[52] = 0;
   out_5354201154370797131[53] = 0;
   out_5354201154370797131[54] = 0;
   out_5354201154370797131[55] = 0;
   out_5354201154370797131[56] = 1;
   out_5354201154370797131[57] = 0;
   out_5354201154370797131[58] = 0;
   out_5354201154370797131[59] = 0;
   out_5354201154370797131[60] = 0;
   out_5354201154370797131[61] = 0;
   out_5354201154370797131[62] = 0;
   out_5354201154370797131[63] = 0;
   out_5354201154370797131[64] = 0;
   out_5354201154370797131[65] = 0;
}
void h_33(double *state, double *unused, double *out_211279920056200028) {
   out_211279920056200028[0] = state[16];
   out_211279920056200028[1] = state[17];
   out_211279920056200028[2] = state[18];
}
void H_33(double *state, double *unused, double *out_921828261011077204) {
   out_921828261011077204[0] = 0;
   out_921828261011077204[1] = 0;
   out_921828261011077204[2] = 0;
   out_921828261011077204[3] = 0;
   out_921828261011077204[4] = 0;
   out_921828261011077204[5] = 0;
   out_921828261011077204[6] = 0;
   out_921828261011077204[7] = 0;
   out_921828261011077204[8] = 0;
   out_921828261011077204[9] = 0;
   out_921828261011077204[10] = 0;
   out_921828261011077204[11] = 0;
   out_921828261011077204[12] = 0;
   out_921828261011077204[13] = 0;
   out_921828261011077204[14] = 0;
   out_921828261011077204[15] = 0;
   out_921828261011077204[16] = 1;
   out_921828261011077204[17] = 0;
   out_921828261011077204[18] = 0;
   out_921828261011077204[19] = 0;
   out_921828261011077204[20] = 0;
   out_921828261011077204[21] = 0;
   out_921828261011077204[22] = 0;
   out_921828261011077204[23] = 0;
   out_921828261011077204[24] = 0;
   out_921828261011077204[25] = 0;
   out_921828261011077204[26] = 0;
   out_921828261011077204[27] = 0;
   out_921828261011077204[28] = 0;
   out_921828261011077204[29] = 0;
   out_921828261011077204[30] = 0;
   out_921828261011077204[31] = 0;
   out_921828261011077204[32] = 0;
   out_921828261011077204[33] = 0;
   out_921828261011077204[34] = 0;
   out_921828261011077204[35] = 0;
   out_921828261011077204[36] = 0;
   out_921828261011077204[37] = 0;
   out_921828261011077204[38] = 0;
   out_921828261011077204[39] = 1;
   out_921828261011077204[40] = 0;
   out_921828261011077204[41] = 0;
   out_921828261011077204[42] = 0;
   out_921828261011077204[43] = 0;
   out_921828261011077204[44] = 0;
   out_921828261011077204[45] = 0;
   out_921828261011077204[46] = 0;
   out_921828261011077204[47] = 0;
   out_921828261011077204[48] = 0;
   out_921828261011077204[49] = 0;
   out_921828261011077204[50] = 0;
   out_921828261011077204[51] = 0;
   out_921828261011077204[52] = 0;
   out_921828261011077204[53] = 0;
   out_921828261011077204[54] = 0;
   out_921828261011077204[55] = 0;
   out_921828261011077204[56] = 0;
   out_921828261011077204[57] = 0;
   out_921828261011077204[58] = 0;
   out_921828261011077204[59] = 0;
   out_921828261011077204[60] = 0;
   out_921828261011077204[61] = 0;
   out_921828261011077204[62] = 1;
   out_921828261011077204[63] = 0;
   out_921828261011077204[64] = 0;
   out_921828261011077204[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1180236145992489736) {
  H(in_vec, out_1180236145992489736);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6715227640650976900) {
  err_fun(nom_x, delta_x, out_6715227640650976900);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1548982549716130313) {
  inv_err_fun(nom_x, true_x, out_1548982549716130313);
}
void live_H_mod_fun(double *state, double *out_2860172969077957858) {
  H_mod_fun(state, out_2860172969077957858);
}
void live_f_fun(double *state, double dt, double *out_7509353369532479333) {
  f_fun(state,  dt, out_7509353369532479333);
}
void live_F_fun(double *state, double dt, double *out_4886194137270510489) {
  F_fun(state,  dt, out_4886194137270510489);
}
void live_h_4(double *state, double *unused, double *out_4637897841970702621) {
  h_4(state, unused, out_4637897841970702621);
}
void live_H_4(double *state, double *unused, double *out_5805323984074307015) {
  H_4(state, unused, out_5805323984074307015);
}
void live_h_9(double *state, double *unused, double *out_8591118695218469571) {
  h_9(state, unused, out_8591118695218469571);
}
void live_H_9(double *state, double *unused, double *out_5354201154370797131) {
  H_9(state, unused, out_5354201154370797131);
}
void live_h_10(double *state, double *unused, double *out_7242359529701963629) {
  h_10(state, unused, out_7242359529701963629);
}
void live_H_10(double *state, double *unused, double *out_4137885373585509426) {
  H_10(state, unused, out_4137885373585509426);
}
void live_h_12(double *state, double *unused, double *out_8526913763654168672) {
  h_12(state, unused, out_8526913763654168672);
}
void live_H_12(double *state, double *unused, double *out_575934392968425981) {
  H_12(state, unused, out_575934392968425981);
}
void live_h_31(double *state, double *unused, double *out_5203034508709014668) {
  h_31(state, unused, out_5203034508709014668);
}
void live_H_31(double *state, double *unused, double *out_2228728743627780400) {
  H_31(state, unused, out_2228728743627780400);
}
void live_h_32(double *state, double *unused, double *out_6866430390157578802) {
  h_32(state, unused, out_6866430390157578802);
}
void live_H_32(double *state, double *unused, double *out_6285504618598459895) {
  H_32(state, unused, out_6285504618598459895);
}
void live_h_13(double *state, double *unused, double *out_4190634259273921891) {
  h_13(state, unused, out_4190634259273921891);
}
void live_H_13(double *state, double *unused, double *out_5258487694199186349) {
  H_13(state, unused, out_5258487694199186349);
}
void live_h_14(double *state, double *unused, double *out_8591118695218469571) {
  h_14(state, unused, out_8591118695218469571);
}
void live_H_14(double *state, double *unused, double *out_5354201154370797131) {
  H_14(state, unused, out_5354201154370797131);
}
void live_h_33(double *state, double *unused, double *out_211279920056200028) {
  h_33(state, unused, out_211279920056200028);
}
void live_H_33(double *state, double *unused, double *out_921828261011077204) {
  H_33(state, unused, out_921828261011077204);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
